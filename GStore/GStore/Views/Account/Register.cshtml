@model GStore.Models.ViewModels.RegisterViewModel
@{
	StoreFrontConfiguration storeFrontConfig = Html.CurrentStoreFrontConfig(false);
	if (storeFrontConfig == null)
	{
		ViewBag.Title = "Register for GStore";
	}
	else
	{
		ViewBag.Title = storeFrontConfig.NavBarRegisterLinkText + " for " + storeFrontConfig.Name;
	}
	bool checkingOut = Model.CheckingOut ?? false;
	object routeValues = null;
	if (checkingOut)
	{
		routeValues = new { CheckingOut = checkingOut };
	}
}

<div class="row">
	<h2 class="AccountTitle jumbotron col-md-offset-2 col-md-7 title-align">@ViewBag.Title</h2>
</div>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
	@Html.AntiForgeryToken()
	@Html.HiddenFor(model => model.CheckingOut)
	<div class="row">
		<h4 class="title-align col-md-offset-2 col-md-7">Please register to get site updates and full access to the site.</h4>
	</div>
	
	if (checkingOut)
	{
		@Html.ActionLink("Return to Checkout as a Guest", "Index", "Checkout", routeValues, new { @class = "btn btn-info" })
	}

	<hr />
	
	<div class="row">
		<div class="form-validation col-md-offset-2 col-md-7">
			@Html.ValidationSummary(false, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-horizontal">
		<div class="form-group">
			@Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
			<div class="col-md-10">
				@Html.TextBoxFor(m => m.Email, new { @class = "form-control", MaxLength = 150 })
				@Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
			</div>
			@Html.HelpLabelFor(m => m.Email, new { @class = "row title-align col-md-offset-2 col-md-10 help-label" })
		</div>

		<div class="form-group">
			@Html.LabelFor(m => m.FullName, new { @class = "col-md-2 control-label" })
			<div class="col-md-10">
				@Html.TextBoxFor(m => m.FullName, new { @class = "form-control", MaxLength = 150 })
				@Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
			</div>
			@Html.HelpLabelFor(m => m.FullName, new { @class = "row title-align col-md-offset-2 col-md-10 help-label" })
		</div>

		<div class="form-group">
			@Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
			<div class="col-md-10">
				@Html.PasswordFor(m => m.Password, new { @class = "form-control", MaxLength = 50 })
				@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
			</div>
			@Html.HelpLabelFor(m => m.Password, new { @class = "row title-align col-md-offset-2 col-md-10 help-label" })
		</div>
		<div class="form-group">
			@Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
			<div class="col-md-10">
				@Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", MaxLength = 50 })
				@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
			</div>
			@Html.HelpLabelFor(m => m.ConfirmPassword, new { @class = "row title-align col-md-offset-2 col-md-10 help-label" })
		</div>

		<div class="form-group">
			@Html.LabelFor(m => m.NotifyOfSiteUpdates, new { @class = "col-md-2 control-label" })
			<div class="col-md-10">
				@Html.CheckBoxFor(m => m.NotifyOfSiteUpdates, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.NotifyOfSiteUpdates, "", new { @class = "text-danger" })
			</div>
			@Html.HelpLabelFor(m => m.NotifyOfSiteUpdates, new { @class = "row title-align col-md-offset-2 col-md-10 help-label" })
		</div>

		<div class="form-group">
			@Html.LabelFor(m => m.SendMeMoreInfo, new { @class = "col-md-2 control-label" })
			<div class="col-md-10">
				@Html.CheckBoxFor(m => m.SendMeMoreInfo, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.SendMeMoreInfo, "", new { @class = "text-danger" })
			</div>
			@Html.HelpLabelFor(m => m.SendMeMoreInfo, new { @class = "row title-align col-md-offset-2 col-md-10 help-label" })
		</div>

		<div class="form-group">
			@Html.LabelFor(m => m.SignupNotes, new { @class = "col-md-2 control-label" })
			<div class="col-md-10">
				@Html.TextAreaFor(m => m.SignupNotes, 10, 60, new { @class = "form-control", MaxLength = 1000 })
				@Html.ValidationMessageFor(m => m.SignupNotes, "", new { @class = "text-danger" })
			</div>
			@Html.HelpLabelFor(m => m.SignupNotes, new { @class = "row title-align col-md-offset-2 col-md-10 help-label" })
		</div>
	</div>

	if ((storeFrontConfig != null) && (storeFrontConfig.RegisterWebForm != null) && storeFrontConfig.RegisterWebForm.IsActiveBubble())
	{
		Html.RenderPartial("_RegisterWebFormFieldsPartial", Model);
	}
	
	<div class="row">
		<div class="form-actions row col-md-offset-2 col-md-7">
			@{
				string linkText = "Register";
				if (storeFrontConfig != null)
				{
					linkText = storeFrontConfig.NavBarRegisterLinkText;
				}
			}
			<input type="submit" class="btn btn-primary" value="@linkText" />
		</div>
	</div>
}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script type="text/javascript">
		$(document).ready(function () {
			$('input:text:first').focus();
		})
	</script>
}
