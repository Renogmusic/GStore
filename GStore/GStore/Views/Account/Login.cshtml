@model GStore.Models.ViewModels.LoginViewModel
@using GStore.AppHtmlHelpers
@using GStore.Models
@using GStore.Models.ViewModels

@{
	StoreFront storeFront = Html.CurrentStoreFront(false);
	if (storeFront == null)
	{
		ViewBag.Title = "Log in to GStore";
	}
	else
	{
		ViewBag.Title = "Log in to " + storeFront.Name;
	}
}

<div class="row">
	<h2 class="AccountTitle jumbotron col-md-offset-2 col-md-7 title-align bg-primary">@ViewBag.Title</h2>
</div>

@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
	@Html.AntiForgeryToken()
	<div class="row">
		<div class="form-validation col-md-offset-2 col-md-8">
			@Html.ValidationSummary(false, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-horizontal">
		<div class="form-group">
			@Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
			<div class="col-md-8">
				@Html.TextBoxFor(m => m.Email, new { @class = "form-control", id = "Email", MaxLength = 150 })
				@Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
			</div>
			@Html.HelpLabelFor(m => m.Email, new { @class = "row title-align col-md-offset-2 col-md-10 help-label" })
		</div>

		<div class="form-group">
			@Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
			<div class="col-md-8">
				@Html.PasswordFor(m => m.Password, new { @class = "form-control", MaxLength = 50 })
				@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
			</div>
			@Html.HelpLabelFor(m => m.Password, new { @class = "row title-align col-md-offset-2 col-md-10 help-label" })
		</div>

		<div class="form-group">
			@Html.LabelFor(m => m.RememberMe, new { @class = "col-md-2 control-label" })
			<div class="col-md-8">
				@Html.CheckBoxFor(m => m.RememberMe, new { @class = "form-controlx" })
			</div>
			@Html.HelpLabelFor(m => m.RememberMe, new { @class = "row title-align col-md-offset-2 col-md-10 help-label" })
		</div>
	</div>

	<hr />
	
	<div class="form-actions row">
		<div class="col-md-offset-2 col-md-8">
			<input type="submit" value="Log in" class="btn btn-primary" />

			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
			@{
				string linkText = string.Empty;
				if (storeFront != null && !string.IsNullOrEmpty(storeFront.NavBarRegisterLinkText))
				{
					linkText = storeFront.AccountLoginRegisterLinkText;
				}
				else
				{
					linkText = "Sign-Up as a new user";
				}

				if (storeFront != null && storeFront.AccountLoginShowRegisterLink)
				{
					@Html.ActionLink(linkText, "Register", null, new { @class = "btn btn-warning" })
					@:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				}

				@Html.ActionLink("Forgot your password?", "ForgotPassword", null, new { @class="btn btn-danger" } )
			}
		</div>
	</div>
}


@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")

	<script type="text/javascript">
		$(document).ready(function () {
			$('input:text:first').focus();
		})
	</script>
}

