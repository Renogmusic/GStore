@model System.Web.Mvc.HandleErrorInfo

@{
	ViewBag.Title = "Error";
}
<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>
<div>
	@if (Request.IsLocal || User.IsInRole("SystemAdmin"))
	{
		if (Model == null)
		{
			@:Unknown error
		}
		else
		{
			@:<h3>Error Details</h3>
			@:Exception: <strong>@Model.Exception.Message</strong>
			<br />
			@:Controller/Action: <strong>@Model.ControllerName / @Model.ActionName</strong><br />
			if (Model.Exception != null)
			{
				@:<strong>Source: @Model.Exception.Source</strong><br />
				if (Model.Exception.TargetSite != null)
				{
					@:Method: <strong>@Model.Exception.TargetSite.Name </strong><br />
					@:Target Site: <strong>@Model.Exception.TargetSite.DeclaringType.FullName</strong><br />
					@:Target Site Info: <strong>@Model.Exception.TargetSite.ToString()</strong><br />
				}
				@:<pre>Exception.ToString: @Model.Exception.ToString()</pre>
				@:<pre>Stack Trace: @Model.Exception.StackTrace</pre>




				if (Model.Exception is HttpException)
				{
					HttpException httpEx = Model.Exception as HttpException;
					string htmlError = httpEx.GetHtmlErrorMessage();

					if (htmlError.Contains("<body bgcolor=\"white\">"))
					{
						//cut up to body tag
						htmlError = htmlError.Substring(htmlError.IndexOf("<body bgcolor=\"white\">"));
						htmlError = htmlError.Replace("<body bgcolor=\"white\">", "<div style=\"background-color: white; color: black;\">");
						htmlError = htmlError.Replace("</body>", string.Empty);
						htmlError = htmlError.Replace("</html>", string.Empty);
						htmlError += "</div>";
					}

					@:<div style="background-color: white">
						@:<hr />HTTP Exception<hr />
						@Html.Raw(htmlError)
						@:<hr />
						@:</div>
				}
			}
		}
	}

</div>
