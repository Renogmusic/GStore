@using GStore.Controllers
@using GStore.Controllers.BaseClass
@{
	GStore.Models.StoreFront storeFront = Html.CurrentStoreFront(false);
	GStore.Models.StoreFrontConfiguration storeFrontConfig = Html.CurrentStoreFrontConfig(false);
	GStore.Models.Client client = Html.CurrentClient(false);
	GStore.Models.Page page = Html.CurrentPage(false);

	string title = string.Empty;
	UserProfile userProfile = Html.CurrentUserProfile(false);

	title = (storeFrontConfig == null || !storeFrontConfig.IsActiveDirect() ? "GStore" : storeFrontConfig.Name);

	if (page != null && !string.IsNullOrWhiteSpace(page.PageTitle))
	{
		title = page.PageTitle + " - " + title;
	}

	if (ViewBag.Title != null && !string.IsNullOrWhiteSpace(ViewBag.Title))
	{
		title = ViewBag.Title + " - " + title;
	}

	string metaApplicationName = "GStore Store Front";
	string metaApplicationTileColor = "880088";
	string metaDescription = "GStore Store Front";
	string metaKeywords = "GStore Store Front";
	string bodyTopScriptTag = string.Empty;
	string bodyBottomScriptTag = string.Empty;

	string themeFolderName = Html.ThemeFolderName();
	if (storeFrontConfig != null)
	{
		if (!string.IsNullOrEmpty(storeFrontConfig.MetaApplicationName))
		{
			metaApplicationName = storeFrontConfig.MetaApplicationName;
		}
		if (!string.IsNullOrEmpty(storeFrontConfig.MetaApplicationTileColor))
		{
			metaApplicationTileColor = storeFrontConfig.MetaApplicationTileColor;
		}
		if (!string.IsNullOrEmpty(storeFrontConfig.MetaDescription))
		{
			metaDescription = storeFrontConfig.MetaDescription;
		}
		if (!string.IsNullOrEmpty(storeFrontConfig.MetaKeywords))
		{
			metaKeywords = storeFrontConfig.MetaKeywords;
		}
		if (!string.IsNullOrEmpty(storeFrontConfig.BodyTopScriptTag))
		{
			bodyTopScriptTag = storeFrontConfig.BodyTopScriptTag;
		}
		if (!string.IsNullOrEmpty(storeFrontConfig.BodyBottomScriptTag))
		{
			bodyBottomScriptTag = storeFrontConfig.BodyBottomScriptTag;
		}
	}

	if (page != null)
	{
		if (!string.IsNullOrEmpty(page.BodyTopScriptTag))
		{
			bodyTopScriptTag = page.BodyTopScriptTag;
		}
		if (!string.IsNullOrEmpty(page.BodyBottomScriptTag))
		{
			bodyBottomScriptTag = page.BodyBottomScriptTag;
		}
		if (!string.IsNullOrEmpty(page.MetaDescription))
		{
			metaDescription = page.MetaDescription;
		}
		if (!string.IsNullOrEmpty(page.MetaKeywords))
		{
			metaKeywords = page.MetaKeywords;
		}
		if (!string.IsNullOrEmpty(page.MetaApplicationName))
		{
			metaApplicationName = page.MetaApplicationName;
		}
		if (!string.IsNullOrEmpty(page.MetaApplicationTileColor))
		{
			metaApplicationTileColor = page.MetaApplicationTileColor;
		}
	}

	MenuViewModel menuViewModel = Html.MenuViewModel(storeFrontConfig, userProfile);

	string containerClasses = string.Empty;
	RouteData routeData = ViewContext.RouteData;
	if (routeData != null)
	{
		if (routeData.DataTokens.ContainsKey("area"))
		{
			containerClasses += " area-" + routeData.DataTokens["area"].ToString().ToLower();
		}
		containerClasses += " controller-" + routeData.Values["controller"].ToString().ToLower();
		containerClasses += " action-" + routeData.Values["action"].ToString().ToLower();
	}
	if (ViewData.ModelState != null && !ViewData.ModelState.IsValid)
	{
		containerClasses += " modelinvalid";
	}
	

}
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>@title</title>
	<meta name="application-name" content="@(metaApplicationName)" />
	<meta name="msapplication-TileColor" content="#@(metaApplicationTileColor)" />
	<meta name="msapplication-square70x70logo" content="~/Images/Logo/tiny.png" />
	<meta name="msapplication-square150x150logo" content="~/Images/Logo/square.png" />
	<meta name="msapplication-wide310x150logo" content="~/Images/Logo/wide.png" />
	<meta name="msapplication-square310x310logo" content="~/Images/Logo/large.png" />
	<link rel="shortcut icon" href="~/Images/favicon.ico" type="image/x-icon">
	<link rel="icon" href="~/Images/favicon.ico" type="image/x-icon">
	<link rel="apple-touch-icon" href="~/Images/Logo/square.png" />
	<link rel="apple-touch-startup-image" href="~/Images/Logo/square.png" />
	<meta name="description" content="@(metaDescription)" />
	<meta name="keywords" content="@(metaKeywords)" />
	<script>
		var userName = @(Html.Raw((User.Identity.IsAuthenticated ? "'" + this.Ajax.JavaScriptStringEncode(User.Identity.Name) + "'": "null" )));
		var googleAnalyticsWebPropertyId = @(Html.GoogleAnalyticsWebPropertyIdValueJs(storeFrontConfig));
	</script>
	@Styles.Render("~/Themes/" + themeFolderName + "/Bootstrap.min.css")
	@Styles.Render("~/Styles/GStoreApp.css")
	@Styles.Render("~/Styles/Styles.css")
	@Scripts.Render("~/bundles/modernizr")
	@Scripts.Render("~/bundles/jquery")
	@Scripts.Render("~/bundles/jqueryval")
	@Scripts.Render("~/bundles/jqueryui")
	@Scripts.Render("~/bundles/bootstrap")
	<script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
	<script src="~/signalr/hubs"></script>
	@Scripts.Render("~/Js/GStoreApp.js")
	@Scripts.Render("~/Js/Scripts.js")
</head>
<body>
	@if (page != null)
	{
		@Html.Raw(bodyTopScriptTag)
	}
	@{Html.RenderPartial("_NavbarPartial", menuViewModel);}
	<div class="container body-content@(containerClasses)">
		<!-- top alert container for dynamic alerts-->
		<div id="usermessagecontainer"></div>
		@RenderBody()
		<hr />
		<a name="UserMessagesBottom"></a>
		<div id="usermessagebottomcontainer"></div>
		@{Html.RenderPartial("_FooterPartial");}
	</div>

	@RenderSection("scripts", required: false)

	@Html.RenderUserMessages()
	@Html.RenderUserMessagesBottom()
	@Html.RenderAnnouncements()
	@Html.RenderGaEvents()
	@if (page != null)
	{
		@Html.Raw(bodyBottomScriptTag)
	}
</body>
</html>
