@model GStore.Models.ViewModels.ManageViewModel
@using Microsoft.AspNet.Identity.EntityFramework
@using GStore.Data
@using System.Collections.Generic

@{
	ViewBag.Title = "Manage Your Account";
}

<h2>@User.Identity.Name <small> - @ViewBag.Title.</small></h2>
<style>
	dl dt
	{
		padding-bottom: 2em;
	}
	dl dd
	{
		padding-bottom: 2em;
	}
</style>

<p class="text-success">@ViewBag.StatusMessage</p>
<div>
	<hr />
	<dl class="dl-horizontal">
		@{
			int messageCount = Model.UserProfile.Notifications.Count();
			int unreadCount = Model.UserProfile.Notifications.Count(msg => !msg.Read);
		}
		<dt>Your Messages:</dt>
		<dd>
			<div class="col-md-3">
				<a href="@Url.Action("Index", "Notifications")" class="btn btn-info btn-block">My Messages <br />@unreadCount New Message@(unreadCount == 1 ? "" : "s")<br /> @messageCount Total</a>
			</div>
		</dd>

		<dt>Password:</dt>
		<dd>
			[
			@if (Model.HasPassword)
			{
				@Html.ActionLink("Change your password", "ChangePassword")
			}
			else
			{
				@Html.ActionLink("Create", "SetPassword")
			}
			]
		</dd>

		<dt>Email:</dt>
		<dd>
			@Model.AspNetUser.Email
			@if (Model.EmailConfirmed)
			{
				@:&nbsp;&nbsp;&nbsp;&nbsp;<span class="text-info">[Verified]</span>
			}
			else
			{
				@:&nbsp;&nbsp;&nbsp;&nbsp;<span class="text-danger">[Not Verified]</span>
				@:&nbsp;&nbsp; [@Html.ActionLink("Click here to Verify Your Email Address", "ConfirmEmail", null, new { @class = "" })]
			}
		</dd>

		<dt>Phone Number:</dt>
		<dd>
			@(Model.PhoneNumber ?? "None") [
			@if (Model.PhoneNumber != null)
			{
				@Html.ActionLink("Change", "AddPhoneNumber")
				@: &nbsp;|&nbsp;
				@Html.ActionLink("Remove", "RemovePhoneNumber")
			}
			else
			{
				@Html.ActionLink("Add", "AddPhoneNumber")
			}
			]
		</dd>

		<dt>Notifications:</dt>
		<dd>
			[@Html.ActionLink("Manage My Notifications", "Notifications", null, new { @class = "" })]
		</dd>

			@*<dt>External Logins:</dt>
				<dd>
					@Model.Logins.Count [
					@Html.ActionLink("Manage", "ManageLogins") ]
				</dd>*@
			@*
				Phone Numbers can used as a second factor of verification in a two-factor authentication system.

				 See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
					for details on setting up this ASP.NET application to support two-factor authentication using SMS.

				 Uncomment the following block after you have set up two-factor authentication
			*@


		@*//two-factor authentication, but why would you ever turn it on or off by a user?*@
		@*<dt>Two-Factor Authentication:</dt>
		<dd>
			@if (Model.TwoFactor)
			{

				<form method="post" action="/Manage/DisableTwoFactorAuthentication">
					Enabled
					<input type="submit" value="Disable" class="btn btn-primary" />
				</form>
			}
			else
			{

				<form method="post" action="/Manage/EnableTwoFactorAuthentication">
					Disabled
					<input type="submit" value="Enable" class="btn btn-primary" />
				</form>
			}
		</dd>*@

		@*<dt>Your Logins: [@Model.Logins.Count()]</dt>
			<dd>
				@foreach (var login in Model.Logins)
				{
					@:login.LoginProvider
					@:login.ProviderKey
					@:login.ToString();
				}
			</dd>*@

		@{
			GStore.Models.Identity.
			GStore.Data.GStoreDbContext ctx = new GStore.Data.GStoreDbContext(User);
			GStore.Data.UserProfile profile = ctx.GetCurrentUserProfile();
			List<GStore.Data.Identity.AspNetRole> roles = null;
			List<GStore.Data.Identity.AspNetUserClaim> userClaims = null;
			if (profile == null)
			{
				roles = new List<GStore.Data.Identity.AspNetRole>();
				userClaims = new List<GStore.Data.Identity.AspNetUserClaim>();
			}
			else
			{
				roles = profile.AspNetRoles().ToList();
				userClaims = profile.AspNetUserClaims().ToList();
			}

		}

		<dt>Your Roles: [@roles.Count()]</dt>
		<dd>
			@{
				int roleCounter = 0;
				foreach (GStore.Data.Identity.AspNetRole role in roles)
				{
					roleCounter++;
					if (roleCounter != 1)
					{
						@:,
                    }
					@(role.Name + " [" + role.Id + "]")
				}
			}
		</dd>

		<dt>Your Permissions: [@userClaims.Count()]</dt>
		<dd>
			@{
				int claimCounter = 0;
				foreach (GStore.Data.Identity.AspNetUserClaim userClaim in userClaims)
				{
					claimCounter++;
					if (claimCounter != 1)
					{
						@:,
                    }
					@(userClaim.ClaimType + " = " + userClaim.ClaimValue + " [" + userClaim.Id + "]")
				}
			}
		</dd>


	</dl>
</div>
