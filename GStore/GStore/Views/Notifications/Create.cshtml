@model GStore.Models.ViewModels.NotificationCreateViewModel

@{
	ViewBag.Title = "New Message";
}

<h2>New Message</h2>

@using (Html.BeginForm("Create", "Notifications", FormMethod.Post))
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Notification</h4>
		<hr />
		@Html.ValidationSummary(false, "", new { @class = "text-danger" })
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			<label class="control-label col-md-2">To</label>
			<div class="col-md-10">
				@Html.DropDownList("ToUserProfileId", null, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.ToUserProfileId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Importance, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("Importance", null, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Importance, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control", rows = 20, cols = 60 } })
				@Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<label class="control-label col-md-2">Link 1</label>
			<div class="col-md-10">
				@Html.LabelFor(model => model.Link1Text, htmlAttributes: new { @class = "control-label" })
				@Html.EditorFor(model => model.Link1Text, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Link1Text, "", new { @class = "text-danger" })
				<br />
				@Html.LabelFor(model => model.Link1Url, htmlAttributes: new { @class = "control-label" })
				@Html.EditorFor(model => model.Link1Url, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Link1Url, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<label class="control-label col-md-2">Link 2</label>
			<div class="col-md-10">
				@Html.LabelFor(model => model.Link2Text, htmlAttributes: new { @class = "control-label" })
				@Html.EditorFor(model => model.Link2Text, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Link2Text, "", new { @class = "text-danger" })
				<br />
				@Html.LabelFor(model => model.Link2Url, htmlAttributes: new { @class = "control-label" })
				@Html.EditorFor(model => model.Link2Url, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Link2Url, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<label class="control-label col-md-2">Link 3</label>
			<div class="col-md-10">
				@Html.LabelFor(model => model.Link3Text, htmlAttributes: new { @class = "control-label" })
				@Html.EditorFor(model => model.Link3Text, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Link3Text, "", new { @class = "text-danger" })
				<br />
				@Html.LabelFor(model => model.Link3Url, htmlAttributes: new { @class = "control-label" })
				@Html.EditorFor(model => model.Link3Url, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Link3Url, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<label class="control-label col-md-2">Link 4</label>
			<div class="col-md-10">
				@Html.LabelFor(model => model.Link4Text, htmlAttributes: new { @class = "control-label" })
				@Html.EditorFor(model => model.Link4Text, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Link4Text, "", new { @class = "text-danger" })
				<br>
				@Html.LabelFor(model => model.Link4Url, htmlAttributes: new { @class = "control-label" })
				@Html.EditorFor(model => model.Link4Url, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Link4Url, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Send" class="btn btn-primary" />
				&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
				@Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-warning" })
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
