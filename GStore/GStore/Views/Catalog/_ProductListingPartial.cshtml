@model GStore.Models.ViewModels.CatalogViewModel
@{
	List<Product> products = Model.CurrentProductsListOrNull;
	if (products == null)
	{
		@:There are no products in this category.
	}
	else
	{
		string offsets = "";
		int productCount = products.Count();
		if ((productCount * Model.StoreFrontConfig.CatalogProductColSm) < 12)
		{
			int colsSm = productCount * Model.StoreFrontConfig.CatalogProductColSm;
			int smOffset = (12 - colsSm) / 2;
			offsets = " col-sm-offset-" + smOffset;
		}
		if ((productCount * Model.StoreFrontConfig.CatalogProductColMd) < 12)
		{
			int colsMd = productCount * Model.StoreFrontConfig.CatalogProductColMd;
			int mdOffset = (12 - colsMd) / 2;
			offsets = " col-md-offset-" + mdOffset;
		}
		if ((productCount * Model.StoreFrontConfig.CatalogProductColLg) < 12)
		{
			int colsLg = productCount * Model.StoreFrontConfig.CatalogProductColLg;
			int lgOffset = (12 - colsLg) / 2;
			offsets = " col-lg-offset-" + lgOffset;
		}

		@:<div class="row ProductListContainer">
		foreach (Product product in products)
		{
			@:<div class="ProductListItem col-sm-@(Model.StoreFrontConfig.CatalogProductColSm) col-md-@(Model.StoreFrontConfig.CatalogProductColMd) col-lg-@(Model.StoreFrontConfig.CatalogProductColLg)@(offsets)">
				@:<div class="ProductListItemBox boxshadowjs">
					string url = Url.Action("ViewProductByName", "Catalog", new { urlName = product.UrlName });
					string imageUrl = product.ImageUrl(Request.ApplicationPath);

					@:<a class="ProductListImageLink" href="@(url)"><img class="CategoryListImage" src="@(imageUrl)" title="@(Html.Raw(Html.AttributeEncode(product.Name)))" /></a>
					@:<br />
					@:<a class="ProductListTextLink" href="@(url)">@(product.Name)</a>
					@:</div>
			@:</div>
			offsets = "";
		}
		@:</div>
	}
}
