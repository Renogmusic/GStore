@model GStore.Models.ViewModels.CatalogViewModel
<!-- Category View Default Start -->
@{
	bool isTopOfCatalog = Model.CurrentCategoryOrNull == null;

	bool hasChildCategories = false;
	if (isTopOfCatalog)
	{
		//root display
		hasChildCategories = Model.CategoryTree.Count != 0;
		ViewBag.Title = Model.StoreFrontConfig.CatalogTitle;
		@Html.Raw(Html.ReplaceVariables(Model.StoreFrontConfig.CatalogRootHeaderHtml))
	}
	else
	{
		hasChildCategories = Model.CurrentCategoryNodeOrNull.ChildNodes.Count() != 0;
		ViewBag.Title = Model.CurrentCategoryOrNull.Name;
	}

	Html.RenderPartial("_ViewCategory_Default_Categories_Partial", Model);
	
	if (isTopOfCatalog)
	{
		@Html.Raw(Html.ReplaceVariables(Model.StoreFrontConfig.CatalogRootFooterHtml))
	}
	else
	{
		if (hasChildCategories && Model.CurrentCategoryOrNull != null && !string.IsNullOrEmpty(Model.CurrentCategoryOrNull.ChildCategoryFooterHtml))
		{
			@Html.Raw(Html.ReplaceVariables(Model.CurrentCategoryOrNull.ChildCategoryFooterHtml))
		}
		List<Product> products = Model.CurrentProductsListOrNull;
		if (products == null || products.Count == 0)
		{
			if (!hasChildCategories)
			{
				@Html.Raw(Html.ReplaceVariables(Model.CurrentCategoryOrNull.NoProductsMessageHtml.OrDefault("<h2>There are no current products in Category: " + Model.CurrentCategoryOrNull.Name + "</h2>")))
			}
		}
		else
		{
			if (!string.IsNullOrEmpty(Model.CurrentCategoryOrNull.ProductHeaderHtml))
			{
				@Html.Raw(Html.ReplaceVariables(Model.CurrentCategoryOrNull.ProductHeaderHtml))
			}
			Html.RenderPartial("_ViewCategory_Default_Products_Partial", Model);
			if (!string.IsNullOrEmpty(Model.CurrentCategoryOrNull.ProductFooterHtml))
			{
				@Html.Raw(Html.ReplaceVariables(Model.CurrentCategoryOrNull.ProductFooterHtml))
			}
		}
	}

}
<!-- Category View Default End -->
