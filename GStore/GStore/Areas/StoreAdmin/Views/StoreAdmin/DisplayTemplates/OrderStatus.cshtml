@model GStore.Areas.StoreAdmin.ViewModels.StoreAdminViewModel
@{
	string dashboard = (ViewData["Dashboard"] as string) ?? string.Empty;
	string title = (ViewData["DashboardTitle"] as string) ?? string.Empty;
	string location = (ViewData["DashboardLocation"] as string) ?? string.Empty;
	DashboardDateTimeRange dateTimeRange = (ViewData["DashboardDateTimeRange"] as DashboardDateTimeRange?) ?? DashboardDateTimeRange.Past15Minutes;
	DateTime startDateTimeUtc = dateTimeRange.ToStartDateTimeUtc();
	DateTime endDateTimeUtc = dateTimeRange.ToEndDateTimeUtc();
	int storeFrontId = Html.CurrentStoreFront(true).StoreFrontId;

	int countOrdersWaitingProcessing = Html.GStoreDb().Orders
		.Where(p => p.StoreFrontId == storeFrontId && p.CreateDateTimeUtc > startDateTimeUtc && p.CreateDateTimeUtc < endDateTimeUtc && !p.StatusOrderAccepted)
		.Count();

	int countOrdersPaid = Html.GStoreDb().Orders
		.Where(p => p.StoreFrontId == storeFrontId && p.CreateDateTimeUtc > startDateTimeUtc && p.CreateDateTimeUtc < endDateTimeUtc && p.StatusPaymentProcessed)
		.Count();

	int countOrdersDelivered = Html.GStoreDb().Orders
		.Where(p => p.StoreFrontId == storeFrontId && p.CreateDateTimeUtc > startDateTimeUtc && p.CreateDateTimeUtc < endDateTimeUtc && p.StatusOrderDelivered)
		.Count();

	
}
<div class="well text-warning">
	<span class="btn btn-info NoClick">@(title)</span><br />
	<h4>
		@(countOrdersWaitingProcessing.ToString("N0")) Order@(countOrdersWaitingProcessing == 1 ? "" : "s") Awaiting Processing
		<br />
		@(countOrdersPaid.ToString("N0")) Order@(countOrdersPaid == 1 ? "" : "s") Paid
		<br />
		@(countOrdersDelivered.ToString("N0")) Order@(countOrdersDelivered == 1 ? "" : "s") Completed
	</h4>
</div>