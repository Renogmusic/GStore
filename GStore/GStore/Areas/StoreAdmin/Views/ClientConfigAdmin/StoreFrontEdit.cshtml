@model GStore.Areas.StoreAdmin.ViewModels.StoreFrontConfigAdminViewModel
@using GStore.AppHtmlHelpers
@using GStore.Identity

<script src="~/Scripts/CKEditor/ckeditor.js"></script>
@using (Html.BeginForm())
{
	SelectList userProfileList = ViewBag.UserProfileList as SelectList;
	SelectList themeList = ViewBag.ThemeList as SelectList;
	SelectList registerWebFormList = ViewBag.RegisterWebFormList as SelectList;
	SelectList registerSuccessPageList = ViewBag.RegisterSuccessPageList as SelectList;
	SelectList notFoundPageList = ViewBag.NotFoundPageList as SelectList;
	SelectList storeErrorPageList = ViewBag.StoreErrorPageList as SelectList;

	string tabBasicActive = string.Empty;
	string tabAdminsActive = string.Empty;
	string tabMetaTagsActive = string.Empty;
	string tabTrackingActive = string.Empty;
	string tabThemesActive = string.Empty;
	string tabCatalogLayoutActive = string.Empty;
	string tabErrorPagesActive = string.Empty;
	string tabRegistrationActive = string.Empty;
	string tabAdvancedActive = string.Empty;
	string tabLayoutsActive = string.Empty;

	switch ((Model.ActiveTab ?? string.Empty).ToLower())
	{
		case "":
		case "basic":
			tabBasicActive = "active";
			break;
		case "admins":
			tabAdminsActive = "active";
			break;
		case "metatags":
			tabMetaTagsActive = "active";
			break;
		case "tracking":
			tabTrackingActive = "active";
			break;
		case "themes":
			tabThemesActive = "active";
			break;
		case "cataloglayout":
			tabCatalogLayoutActive = "active";
			break;
		case "errorpages":
			tabErrorPagesActive = "active";
			break;
		case "registration":
			tabRegistrationActive = "active";
			break;
		case "advanced":
			tabAdvancedActive = "active";
			break;
		case "layouts":
			tabLayoutsActive = "active";
			break;
		default:
			goto case "";
	}
	
	<script>
		function JumpToViewTab() {
			var url = '@(Url.Action("StoreFrontView", new { id = Model.StoreFrontId, Tab = "XXXX"}))';
			var tabName = GetActiveTab();
			document.location = url.replace("XXXX", tabName);
		}
	function GetActiveTab()
	{
		if (document.getElementById('ActiveTab'))
		{
			return document.getElementById('ActiveTab').value
		}
		return "";
	}
	function SetActiveTab(tabName) {
		if (document.getElementById('ActiveTab')) {
			document.getElementById('ActiveTab').value = tabName;
		}
	}
	</script>

	@Html.AntiForgeryToken()

	
	<div class="row">
		<h2 class="jumbotron StoreAdminEditPageTitle col-md-offset-2 col-md-7 text-warning title-align">
			<span class="text-warning">Edit Store Front Configuration</span>
			<br />
			<small>@Html.DisplayNameFor(model => model.StoreFront) '@(Model.Name)' [@(Model.StoreFrontId)]</small>
		</h2>
	</div>

	<div class="row">
		<div class="form-actions col-md-offset-3 col-md-9">
			<input type="submit" value="Save" class="btn btn-warning" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			<a class="btn btn-default" href="#" onclick="JumpToViewTab();">OK / Cancel</a>
		</div>
	</div>

	<div class="row">
		<div class="form-validation col-md-offset-3 col-md-9">
			@Html.ValidationSummary(false, "", new { @class = "text-danger bold" })
			@Html.HiddenFor(model => model.StoreFrontId)
		</div>
	</div>

	<div class="form-horizontal">

		<ul class="nav nav-tabs row col-md-offset-3 col-md-9" style="width:100%">
			<li class="@(tabBasicActive)"><a data-toggle="tab" href="#sectionBasic" onclick="SetActiveTab('Basic');">Basic</a></li>
			<li class="@(tabAdminsActive)"><a data-toggle="tab" href="#sectionAdmins" onclick="SetActiveTab('Admins');">Admins</a></li>
			<li class="@(tabMetaTagsActive)"><a data-toggle="tab" href="#sectionMetaTags" onclick="SetActiveTab('MetaTags');">Meta Tags</a></li>
			<li class="@(tabTrackingActive)"><a data-toggle="tab" href="#sectionTracking" onclick="SetActiveTab('Tracking');">Tracking</a></li>
			<li class="@(tabThemesActive)"><a data-toggle="tab" href="#sectionThemes" onclick="SetActiveTab('Themes');">Themes</a></li>
			<li class="@(tabCatalogLayoutActive)"><a data-toggle="tab" href="#sectionCatalogLayout" onclick="SetActiveTab('CatalogLayout');">Catalog Layout</a></li>
			<li class="@(tabErrorPagesActive)"><a data-toggle="tab" href="#sectionErrorPages" onclick="SetActiveTab('ErrorPages');">Error Pages</a></li>
			<li class="@(tabRegistrationActive)"><a data-toggle="tab" href="#sectionRegistration" onclick="SetActiveTab('Registration');">Registration</a></li>
			<li class="@(tabAdvancedActive)"><a data-toggle="tab" href="#sectionAdvanced" onclick="SetActiveTab('Advanced');">Advanced</a></li>
			<li class="@(tabLayoutsActive)"><a data-toggle="tab" href="#sectionLayouts" onclick="SetActiveTab('Layouts');">Layouts</a></li>
		</ul>
		@Html.HiddenFor(model => model.ActiveTab)

		<div class="tab-content">

			<div id="sectionBasic" class="tab-pane fade in @(tabBasicActive)">
				<div class="row">
					<h3 class="col-md-offset-3 col-md-7 bg-warning title-align">Basic Info</h3>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.StoreFrontId, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DisplayFor(model => model.StoreFrontId)
					</div>
					@Html.HelpLabelFor(model => model.StoreFrontId, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.Name, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.PublicUrl, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.PublicUrl, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.PublicUrl, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.PublicUrl, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.Order, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

			</div>

			<div id="sectionAdmins" class="tab-pane fade in @(tabAdminsActive)">
				<div class="row">
					<h3 class="col-md-offset-3 col-md-7 bg-warning title-align">Admin Users</h3>
				</div>


				<div class="form-group">
					@Html.LabelFor(model => model.AccountAdmin_UserProfileId, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("AccountAdmin_UserProfileId", userProfileList, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.AccountAdmin_UserProfileId, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.AccountAdmin_UserProfileId, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.RegisteredNotify_UserProfileId, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("RegisteredNotify_UserProfileId", userProfileList, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.RegisteredNotify_UserProfileId, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.RegisteredNotify_UserProfileId, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.WelcomePerson_UserProfileId, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("WelcomePerson_UserProfileId", userProfileList, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.WelcomePerson_UserProfileId, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.WelcomePerson_UserProfileId, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

			</div>

			<div id="sectionMetaTags" class="tab-pane fade in @(tabMetaTagsActive)">
				<div class="row">
					<h3 class="col-md-offset-3 col-md-7 bg-warning title-align">Meta Tags</h3>
				</div>


				<div class="form-group">
					@Html.LabelFor(model => model.MetaApplicationName, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.MetaApplicationName, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.MetaApplicationName, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.MetaApplicationName, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.MetaApplicationTileColor, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.MetaApplicationTileColor, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.MetaApplicationTileColor, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.MetaApplicationTileColor, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.MetaDescription, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.MetaDescription, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.MetaDescription, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.MetaKeywords, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.MetaKeywords, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.BodyTopScriptTag, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.TextAreaFor(model => model.BodyTopScriptTag, new { @class = "form-control", rows = 8 })
						@Html.ValidationMessageFor(model => model.BodyTopScriptTag, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.BodyTopScriptTag, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.BodyBottomScriptTag, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.TextAreaFor(model => model.BodyBottomScriptTag, new { @class = "form-control", rows = 8 })
						@Html.ValidationMessageFor(model => model.BodyBottomScriptTag, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.BodyBottomScriptTag, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

			</div>

			<div id="sectionTracking" class="tab-pane fade in @(tabTrackingActive)">
				<div class="row">
					<h3 class="col-md-offset-3 col-md-7 bg-warning title-align">Tracking</h3>
				</div>


				<div class="form-group">
					@Html.LabelFor(model => model.EnableGoogleAnalytics, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.EnableGoogleAnalytics, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.EnableGoogleAnalytics, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.EnableGoogleAnalytics, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.GoogleAnalyticsWebPropertyId, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.GoogleAnalyticsWebPropertyId, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.GoogleAnalyticsWebPropertyId, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.GoogleAnalyticsWebPropertyId, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

			</div>

			<div id="sectionThemes" class="tab-pane fade in @(tabThemesActive)">
				<div class="row">
					<h3 class="col-md-offset-3 col-md-7 bg-warning title-align">Themes</h3>
				</div>


				<div class="form-group">
					@Html.LabelFor(model => model.DefaultNewPageThemeId, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("DefaultNewPageThemeId", themeList, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.DefaultNewPageThemeId, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.DefaultNewPageThemeId, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.CatalogThemeId, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("CatalogThemeId", themeList, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.CatalogThemeId, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.CatalogThemeId, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.AccountThemeId, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("AccountThemeId", themeList, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.AccountThemeId, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.AccountThemeId, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.NotificationsThemeId, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("NotificationsThemeId", themeList, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.NotificationsThemeId, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.NotificationsThemeId, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.ProfileThemeId, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("ProfileThemeId", themeList, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.ProfileThemeId, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.ProfileThemeId, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.AdminThemeId, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("AdminThemeId", themeList, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.AdminThemeId, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.AdminThemeId, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

			</div>

			<div id="sectionCatalogLayout" class="tab-pane fade in @(tabCatalogLayoutActive)">
				<div class="row">
					<h3 class="col-md-offset-3 col-md-7 bg-warning title-align">Catalog Layout</h3>
				</div>


				<div class="form-group">
					@Html.LabelFor(model => model.NavBarItemsMaxLevels, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.NavBarItemsMaxLevels, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.NavBarItemsMaxLevels, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.NavBarItemsMaxLevels, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.NavBarCatalogMaxLevels, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.NavBarCatalogMaxLevels, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.NavBarCatalogMaxLevels, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.NavBarCatalogMaxLevels, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.CatalogPageInitialLevels, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.CatalogPageInitialLevels, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.CatalogPageInitialLevels, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.CatalogPageInitialLevels, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.CatalogCategoryColLg, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.CatalogCategoryColLg, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.CatalogCategoryColLg, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.CatalogCategoryColLg, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.CatalogCategoryColMd, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.CatalogCategoryColMd, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.CatalogCategoryColMd, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.CatalogCategoryColMd, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.CatalogCategoryColSm, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.CatalogCategoryColSm, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.CatalogCategoryColSm, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.CatalogCategoryColSm, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.CatalogProductColLg, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.CatalogProductColLg, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.CatalogProductColLg, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.CatalogProductColLg, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.CatalogProductColMd, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.CatalogProductColMd, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.CatalogProductColMd, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.CatalogProductColMd, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.CatalogProductColSm, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.CatalogProductColSm, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.CatalogProductColSm, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.CatalogProductColSm, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

			</div>

			<div id="sectionErrorPages" class="tab-pane fade in @(tabErrorPagesActive)">
				<div class="row">
					<h3 class="col-md-offset-3 col-md-7 bg-warning title-align">Error Pages</h3>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.NotFoundError_PageId, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("NotFoundError_PageId", notFoundPageList, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.NotFoundError_PageId, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.NotFoundError_PageId, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.StoreError_PageId, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("StoreError_PageId", storeErrorPageList, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.StoreError_PageId, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.StoreError_PageId, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

			</div>


			<div id="sectionRegistration" class="tab-pane fade in @(tabRegistrationActive)">
				<div class="row">
					<h3 class="col-md-offset-3 col-md-7 bg-warning title-align">Registration</h3>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.NavBarShowRegisterLink, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.NavBarShowRegisterLink, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.NavBarShowRegisterLink, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.NavBarShowRegisterLink, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.NavBarRegisterLinkText, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.NavBarRegisterLinkText, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.NavBarRegisterLinkText, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.NavBarRegisterLinkText, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.AccountLoginShowRegisterLink, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.AccountLoginShowRegisterLink, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.AccountLoginShowRegisterLink, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.AccountLoginShowRegisterLink, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.AccountLoginRegisterLinkText, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.AccountLoginRegisterLinkText, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.AccountLoginRegisterLinkText, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.AccountLoginRegisterLinkText, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Register_WebFormId, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("Register_WebFormId", registerWebFormList, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.Register_WebFormId, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.Register_WebFormId, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.RegisterSuccess_PageId, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("RegisterSuccess_PageId", registerSuccessPageList, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.RegisterSuccess_PageId, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.RegisterSuccess_PageId, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

			</div>

			<div id="sectionAdvanced" class="tab-pane fade in @(tabAdvancedActive)">
				<div class="row">
					<h3 class="col-md-offset-3 col-md-7 bg-warning title-align">Advanced Info</h3>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.HtmlFooter, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.TextAreaFor(model => model.HtmlFooter, new { @class = "form-control" })
						<script>CKEDITOR.replace('@(Html.IdFor(model => model.HtmlFooter))');</script>
						@Html.ValidationMessageFor(model => model.HtmlFooter, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.HtmlFooter, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })

				</div>

			</div>

			<div id="sectionLayouts" class="tab-pane fade in @(tabLayoutsActive)">
				<div class="row">
					<h3 class="col-md-offset-3 col-md-7 bg-warning title-align">Layouts</h3>
				</div>


				<div class="form-group">
					@Html.LabelFor(model => model.DefaultNewPageLayoutName, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.DefaultNewPageLayoutName, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.DefaultNewPageLayoutName, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.DefaultNewPageLayoutName, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.CatalogLayoutName, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.CatalogLayoutName, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.CatalogLayoutName, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.CatalogLayoutName, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.AccountLayoutName, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.AccountLayoutName, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.AccountLayoutName, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.AccountLayoutName, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.NotificationsLayoutName, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.NotificationsLayoutName, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.NotificationsLayoutName, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.NotificationsLayoutName, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.ProfileLayoutName, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.ProfileLayoutName, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.ProfileLayoutName, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.ProfileLayoutName, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.AdminLayoutName, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.AdminLayoutName, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.AdminLayoutName, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.AdminLayoutName, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

			</div>

		</div>
	</div>

	<div class="row">
		<div class="form-actions col-md-offset-3 col-md-9">
			<input type="submit" value="Save" class="btn btn-warning" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			<a class="btn btn-default" href="#" onclick="JumpToViewTab();">OK / Cancel</a>
		</div>
	</div>
}
<hr />
<div>
	@if (Html.UserHasPermission(GStoreAction.ClientConfig_Manager))
	{
		@Html.ActionLink("Back to Configuration Manager", "Manager") @:&nbsp;|&nbsp;
	}
	@Html.ActionLink("Back to Store Admin", "Index", "StoreAdmin")
</div>
