@model GStore.Areas.StoreAdmin.ViewModels.StoreFrontConfigViewModel
@using GStore.AppHtmlHelpers
@using GStore.Data
@using GStore.Identity
<div class="row">
	<h2 class="col-md-offset-3 col-md-6 jumbotron StoreAdminDetailsPageTitle text-center text-success">
		Store Front Details:
		<br /><small>@(Model.Name) [@(Model.StoreFrontId)]</small>
	</h2>
</div>
<div class="row">
	<div class="form-actions no-color col-md-offset-5 col-md-6">
		@Html.ActionLink("OK", "Manager", null, new { @class = "btn btn-default" })
		@if (Html.UserHasPermission(GStoreAction.ClientConfig_StoreFrontConfig_Edit))
		{
			@:&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Edit", "StoreFrontEdit", new { id = Model.StoreFrontId }, new { @class = "btn btn-warning" })
		}
		&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;
		@Html.ActionLink("View in Tabs", "StoreFrontView", new { id = Model.StoreFrontId }, new { @class= "btn btn-primary" } )
	</div>
</div>
<hr />
<div>
	<dl class="dl-horizontal">
		<dt>
			@Html.DisplayNameFor(model => model.StoreFrontId)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.StoreFrontId)
			<br />@Html.HelpLabelFor(model => model.StoreFrontId, new { @class = "help-label" })
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Name)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Name)
			<br />@Html.HelpLabelFor(model => model.Name, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.PublicUrl)
		</dt>

		<dd>
			<a target="_blank" href="@(Html.Raw(Model.PublicUrl))">@Html.Encode(Model.PublicUrl)</a> (opens in new window)
			<br />@Html.HelpLabelFor(model => model.PublicUrl, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Order)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Order)
			<br />@Html.HelpLabelFor(model => model.Order, new { @class = "help-label" })
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.EnableGoogleAnalytics)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.EnableGoogleAnalytics)
			<br/>@Html.HelpLabelFor(model => model.EnableGoogleAnalytics, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.GoogleAnalyticsWebPropertyId)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.GoogleAnalyticsWebPropertyId)
			<br />@Html.HelpLabelFor(model => model.GoogleAnalyticsWebPropertyId, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.NavBarShowRegisterLink)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.NavBarShowRegisterLink)
			@Html.HelpLabelFor(model => model.NavBarShowRegisterLink, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.NavBarRegisterLinkText)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.NavBarRegisterLinkText)
			<br />@Html.HelpLabelFor(model => model.NavBarRegisterLinkText, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.AccountLoginShowRegisterLink)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.AccountLoginShowRegisterLink)
			@Html.HelpLabelFor(model => model.AccountLoginShowRegisterLink, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.AccountLoginRegisterLinkText)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.AccountLoginRegisterLinkText)
			<br />@Html.HelpLabelFor(model => model.AccountLoginRegisterLinkText, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.HtmlFooter)
		</dt>

		<dd>
			@Html.Raw(Model.HtmlFooter)
			<br />@Html.HelpLabelFor(model => model.HtmlFooter, new { @class = "help-label" })
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.MetaApplicationName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.MetaApplicationName)
			<br />@Html.HelpLabelFor(model => model.MetaApplicationName, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.MetaApplicationTileColor)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.MetaApplicationTileColor)
			<br />@Html.HelpLabelFor(model => model.MetaApplicationTileColor, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.MetaDescription)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.MetaDescription)
			<br />@Html.HelpLabelFor(model => model.MetaDescription, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.MetaKeywords)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.MetaKeywords)
			<br />@Html.HelpLabelFor(model => model.MetaKeywords, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.BodyTopScriptTag)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.BodyTopScriptTag)
			<br />@Html.HelpLabelFor(model => model.BodyTopScriptTag, new { @class = "help-label" })
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.BodyBottomScriptTag)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.BodyBottomScriptTag)
			<br />@Html.HelpLabelFor(model => model.BodyBottomScriptTag, new { @class = "help-label" })
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.NavBarItemsMaxLevels)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.NavBarItemsMaxLevels)
			<br />@Html.HelpLabelFor(model => model.NavBarItemsMaxLevels, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.NavBarCatalogMaxLevels)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.NavBarCatalogMaxLevels)
			<br />@Html.HelpLabelFor(model => model.NavBarCatalogMaxLevels, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.CatalogPageInitialLevels)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.CatalogPageInitialLevels)
			<br />@Html.HelpLabelFor(model => model.CatalogPageInitialLevels, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.CatalogCategoryColLg)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.CatalogCategoryColLg)
			<br />@Html.HelpLabelFor(model => model.CatalogCategoryColLg, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.CatalogCategoryColMd)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.CatalogCategoryColMd)
			<br />@Html.HelpLabelFor(model => model.CatalogCategoryColMd, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.CatalogCategoryColSm)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.CatalogCategoryColSm)
			<br />@Html.HelpLabelFor(model => model.CatalogCategoryColSm, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.CatalogProductColLg)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.CatalogProductColLg)
			<br />@Html.HelpLabelFor(model => model.CatalogProductColLg, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.CatalogProductColMd)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.CatalogProductColMd)
			<br />@Html.HelpLabelFor(model => model.CatalogProductColMd, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.CatalogProductColSm)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.CatalogProductColSm)
			<br />@Html.HelpLabelFor(model => model.CatalogProductColSm, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.AccountAdmin)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.AccountAdmin)
			<br />@Html.HelpLabelFor(model => model.AccountAdmin, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.RegisteredNotify_UserProfileId)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.RegisteredNotify)
			<br />@Html.HelpLabelFor(model => model.RegisteredNotify, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.WelcomePerson_UserProfileId)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.WelcomePerson)
			<br />@Html.HelpLabelFor(model => model.WelcomePerson, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.RegisterWebForm)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.RegisterWebForm)
			<br />@Html.HelpLabelFor(model => model.RegisterWebForm, new { @class = "help-label" })
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.RegisterSuccessPage)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.RegisterSuccessPage)
			<br />@Html.HelpLabelFor(model => model.RegisterSuccessPage, new { @class = "help-label" })
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.NotFoundErrorPage)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.NotFoundErrorPage)
			<br />@Html.HelpLabelFor(model => model.NotFoundErrorPage, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.StoreErrorPage)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.StoreErrorPage)
			<br />@Html.HelpLabelFor(model => model.StoreErrorPage, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.DefaultNewPageTheme)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.DefaultNewPageTheme)
			<br />@Html.HelpLabelFor(model => model.DefaultNewPageTheme, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.AdminTheme)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.AdminTheme)
			<br />@Html.HelpLabelFor(model => model.AdminTheme, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.AccountTheme)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.AccountTheme)
			<br />@Html.HelpLabelFor(model => model.AccountTheme, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.CatalogTheme)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.CatalogTheme)
			<br />@Html.HelpLabelFor(model => model.CatalogTheme, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.NotificationsTheme)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.NotificationsTheme)
			<br />@Html.HelpLabelFor(model => model.NotificationsTheme, new { @class = "help-label" })
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.ProfileTheme)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.ProfileTheme)
			<br />@Html.HelpLabelFor(model => model.ProfileTheme, new { @class = "help-label" })
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.DefaultNewPageLayoutName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.DefaultNewPageLayoutName)
			<br />@Html.HelpLabelFor(model => model.DefaultNewPageLayoutName, new { @class = "help-label" })
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.AdminLayoutName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.AdminLayoutName)
			<br />@Html.HelpLabelFor(model => model.AdminLayoutName, new { @class = "help-label" })
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.AccountLayoutName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.AccountLayoutName)
			<br />@Html.HelpLabelFor(model => model.AccountLayoutName, new { @class = "help-label" })
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.CatalogLayoutName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.CatalogLayoutName)
			<br />@Html.HelpLabelFor(model => model.CatalogLayoutName, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.NotificationsLayoutName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.NotificationsLayoutName)
			<br />@Html.HelpLabelFor(model => model.NotificationsLayoutName, new { @class = "help-label" } )
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.ProfileLayoutName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.ProfileLayoutName)
			<br />@Html.HelpLabelFor(model => model.ProfileLayoutName, new { @class = "help-label" } )
		</dd>

	</dl>
</div>

<div class="row">
	<div class="form-actions no-color col-md-offset-5 col-md-6">
		@Html.ActionLink("OK", "Manager", null, new { @class = "btn btn-default" })
		@if (Html.UserHasPermission(GStoreAction.ClientConfig_StoreFrontConfig_Edit))
		{
			@:&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Edit", "StoreFrontEdit", new { id = Model.StoreFrontId }, new { @class = "btn btn-warning" })
		}
		&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;
		@Html.ActionLink("View in Tabs", "StoreFrontView", new { id = Model.StoreFrontId }, new { @class = "btn btn-primary" })
	</div>
</div>
<hr />
<div>
	@if (Html.UserHasPermission(GStoreAction.ClientConfig_Manager))
	{
		@Html.ActionLink("Back to Configuration Manager", "Manager") @:&nbsp;|&nbsp;
	}
	@Html.ActionLink("Back to Store Admin", "Index", "StoreAdmin")
</div>
