@model GStore.Areas.StoreAdmin.ViewModels.ClientConfigViewModel
@using GStore.AppHtmlHelpers
@using GStore.Identity
@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="row">
		<h2 class="jumbotron StoreAdminEditPageTitle col-md-offset-2 col-md-7 text-warning title-align">
			Edit Client Configuration
			<br /><small>'@(Model.Name)' [@(Model.ClientId)]</small>
		</h2>
	</div>

	<div class="row">
		<div class="form-actions col-md-offset-3 col-md-9">
			<input type="submit" value="Save" class="btn btn-warning" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Cancel", "ClientView", null, new { @class = "btn btn-default" })
		</div>
	</div>

	<div class="row">
		<div class="form-validation col-md-offset-3 col-md-9">
			@Html.ValidationSummary(false, "", new { @class = "text-danger bold" })
			@Html.HiddenFor(model => model.ClientId)
		</div>
	</div>

	<div class="form-horizontal">
		<ul class="nav nav-tabs row col-md-offset-3 col-md-9" style="width:100%">
			<li class="active"><a data-toggle="tab" href="#sectionBasic">Basic</a></li>
			<li class=""><a data-toggle="tab" href="#sectionEmail">Email</a></li>
			<li class=""><a data-toggle="tab" href="#sectionSms">SMS Text</a></li>
			<li class=""><a data-toggle="tab" href="#sectionAdvanced">Advanced</a></li>
		</ul>

		<div class="tab-content">

			<div id="sectionBasic" class="tab-pane fade in active">
				<hr />
				<div class="form-group">
					@Html.LabelFor(model => model.Client.Name, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.Name, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>
			</div>

			<div id="sectionEmail" class="tab-pane fade in">
				<hr />
				<div class="form-group">
					@Html.LabelFor(model => model.Client.UseSendGridEmail, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.UseSendGridEmail, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.UseSendGridEmail, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.UseSendGridEmail, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Client.SendGridMailAccount, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.SendGridMailAccount, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.SendGridMailAccount, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.SendGridMailAccount, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Client.SendGridMailFromEmail, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.SendGridMailFromEmail, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.SendGridMailFromEmail, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.SendGridMailFromEmail, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Client.SendGridMailFromName, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.SendGridMailFromName, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.SendGridMailFromName, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.SendGridMailFromName, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Client.SendGridMailPassword, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.SendGridMailPassword, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.SendGridMailPassword, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.SendGridMailPassword, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>
			</div>

			<div id="sectionSms" class="tab-pane fade in">
				<hr />
				<div class="form-group">
					@Html.LabelFor(model => model.Client.UseTwilioSms, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.UseTwilioSms, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.UseTwilioSms, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.UseTwilioSms, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Client.TwilioFromPhone, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.TwilioFromPhone, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.TwilioFromPhone, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.TwilioFromPhone, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Client.TwilioSid, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.TwilioSid, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.TwilioSid, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.TwilioSid, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Client.TwilioSmsFromEmail, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.TwilioSmsFromEmail, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.TwilioSmsFromEmail, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.TwilioSmsFromEmail, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Client.TwilioSmsFromName, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.TwilioSmsFromName, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.TwilioSmsFromName, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.TwilioSmsFromName, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Client.TwilioToken, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.TwilioToken, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.TwilioToken, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.TwilioToken, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>
			</div>

			<div id="sectionAdvanced" class="tab-pane fade in">
				<hr />
				<div class="form-group">
					@Html.LabelFor(model => model.Client.EnablePageViewLog, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.EnablePageViewLog, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.EnablePageViewLog, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.EnablePageViewLog, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Client.EnableNewUserRegisteredBroadcast, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.EnableNewUserRegisteredBroadcast, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.EnableNewUserRegisteredBroadcast, "", new { @class = "text-danger" })
					</div>
					@Html.HelpLabelFor(model => model.EnableNewUserRegisteredBroadcast, new { @class = "row help-label col-md-offset-3 col-md-9 title-align" })
				</div>

			</div>

		</div>
	</div>
	
	<div class="row">
		<div class="form-actions col-md-offset-3 col-md-9">
			<input type="submit" value="Save" class="btn btn-warning" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Cancel", "ClientView", null, new { @class = "btn btn-default" })
		</div>
	</div>

}
<hr />
<div>
	@if (Html.UserHasPermission(GStoreAction.ClientConfig_Manager))
	{
		@Html.ActionLink("Back to Configuration Manager", "Manager") @:&nbsp;|&nbsp;
	}
	@Html.ActionLink("Back to Store Admin", "Index", "StoreAdmin")
</div>
