@model GStore.Areas.CatalogAdmin.ViewModels.ProductEditAdminViewModel

<div>
	<h3>Are you sure you want to delete this Product?</h3>
	<h4>@Html.DisplayFor(model => model.Product) </h4>
	<hr />
	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()
		@Html.HiddenFor(model => model.ReturnToFrontEnd)
		<div class="row">
			<div class="form-actions no-color col-md-offset-2 col-md-7">
				<center>
					<input type="submit" value="Delete" class="btn btn-danger" />
					&nbsp;&nbsp;|&nbsp;&nbsp;
					@if (Model.ReturnToFrontEnd)
					{
						@Html.ActionLink("Cancel", "ViewProductByName", "Catalog", new { area = "", urlName = Model.UrlName }, new { @class = "btn btn-default" })
					}
					else
					{
						@Html.ActionLink("Cancel", "Manager", null, new { @class = "btn btn-default" })
					}
					&nbsp;&nbsp;|&nbsp;&nbsp;
					@Html.ActionLink("Details", "Details", new { id = Model.ProductId, ReturnToFrontEnd = Model.ReturnToFrontEnd }, new { @class = "btn btn-success" })
					&nbsp;&nbsp;|&nbsp;&nbsp;
					@Html.ActionLink("Edit", "Edit", new { id = Model.ProductId, ReturnToFrontEnd = Model.ReturnToFrontEnd }, new { @class = "btn btn-warning" })
				</center>
			</div>
		</div>
	}

	<dl class="dl-horizontal">
		<dt>
			@Html.DisplayNameFor(model => model.Name)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Name)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.UrlName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.UrlName)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Order)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Order)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.ImageName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.ImageName)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Category)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Category)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.ForRegisteredOnly)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.ForRegisteredOnly)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.ForAnonymousOnly)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.ForAnonymousOnly)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.DigitalDownload)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.DigitalDownload)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.BaseListPrice)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.BaseListPrice)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.BaseUnitPrice)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.BaseUnitPrice)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.SummaryHtml)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.SummaryHtml)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.DescriptionHtml)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.DescriptionHtml)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.FooterHtml)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.FooterHtml)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.DigitalDownloadFileName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.DigitalDownloadFileName)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.SampleAudioCaption)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.SampleAudioCaption)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.SampleAudioFileName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.SampleAudioFileName)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.SampleDownloadCaption)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.SampleDownloadCaption)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.SampleDownloadFileName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.SampleDownloadFileName)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.SampleImageCaption)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.SampleImageCaption)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.SampleImageFileName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.SampleImageFileName)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.MaxQuantityPerOrder)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.MaxQuantityPerOrder)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.MetaDescription)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.MetaDescription)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.MetaKeywords)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.MetaKeywords)
		</dd>


		<dt>
			@Html.DisplayNameFor(model => model.CreateDateTimeUtc)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.CreateDateTimeUtc)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.CreatedBy)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.CreatedBy)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.UpdateDateTimeUtc)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.UpdateDateTimeUtc)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.UpdatedBy)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.UpdatedBy)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.IsPending)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.IsPending)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.StartDateTimeUtc)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.StartDateTimeUtc)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.EndDateTimeUtc)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.EndDateTimeUtc)
		</dd>

	</dl>


	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()
		@Html.HiddenFor(model => model.ReturnToFrontEnd)
		<div class="row">
			<div class="form-actions no-color col-md-offset-2 col-md-7">
				<center>
					<input type="submit" value="Delete" class="btn btn-danger" />
					&nbsp;&nbsp;|&nbsp;&nbsp;
					@if (Model.ReturnToFrontEnd)
					{
						@Html.ActionLink("Cancel", "ViewProductByName", "Catalog", new { area = "", urlName = Model.UrlName }, new { @class = "btn btn-default" })
					}
					else
					{
						@Html.ActionLink("Cancel", "Manager", null, new { @class = "btn btn-default" })
					}
					&nbsp;&nbsp;|&nbsp;&nbsp;
					@Html.ActionLink("Details", "Details", new { id = Model.ProductId, ReturnToFrontEnd = Model.ReturnToFrontEnd }, new { @class = "btn btn-success" })
					&nbsp;&nbsp;|&nbsp;&nbsp;
					@Html.ActionLink("Edit", "Edit", new { id = Model.ProductId, ReturnToFrontEnd = Model.ReturnToFrontEnd }, new { @class = "btn btn-warning" })
				</center>
			</div>
		</div>
	}
</div>
