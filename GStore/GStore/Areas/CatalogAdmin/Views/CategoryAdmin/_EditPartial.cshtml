@model CategoryEditAdminViewModel
@{
	StoreFrontConfiguration storeFrontConfig = Html.CurrentStoreFront(true).CurrentConfigOrAny();
	Theme catalogTheme = storeFrontConfig.CatalogTheme;
	string catalogThemeName = "Store Catalog Theme: '" + catalogTheme.Name + "' [" + catalogTheme.ThemeId + "]";
}
<div class="form-horizontal">
	@Html.ValidationSummary(false, "", new { @class = "text-danger" })

	@Html.HiddenFor(model => model.ProductCategoryId)
	@Html.EditorFor(model => model.Name, "FieldText")
	@Html.EditorFor(model => model.UrlName, "FieldText")
	@Html.EditorFor(model => model.ImageName, "FieldProductCategoryFile", new { filterForImages = true })

	<div class="form-group">
		<label class="col-md-offset-1 col-md-3 title-align-right" for="ImageName">Image Preview</label>
		<div class="col-md-7 title-align">
			@Html.DisplayFor(model => model.ImageName, "ProductCategoryFileInfo")
		</div>
	</div>

	@Html.EditorFor(model => model.ForRegisteredOnly, "FieldCheckbox")
	@Html.EditorFor(model => model.ForAnonymousOnly, "FieldCheckbox")
	@Html.EditorFor(model => model.Order, "FieldInt")
	@Html.EditorFor(model => model.ParentCategoryId, "FieldProductCategoryIdNullable")
	@Html.EditorFor(model => model.UseDividerAfterOnMenu, "FieldCheckbox")
	@Html.EditorFor(model => model.UseDividerBeforeOnMenu, "FieldCheckbox")
	@Html.EditorFor(model => model.ShowInMenu, "FieldCheckbox")
	@Html.EditorFor(model => model.HideInMenuIfEmpty, "FieldCheckbox")
	@Html.EditorFor(model => model.ShowInCatalogIfEmpty, "FieldCheckbox")
	@Html.EditorFor(model => model.DisplayForDirectLinks, "FieldCheckbox")
	@Html.EditorFor(model => model.AllowChildCategoriesInMenu, "FieldCheckbox")

	@Html.EditorFor(model => model.ThemeId, "FieldThemeIdNullable", new { optionLabel = "(Default - " + catalogThemeName + ")" })
	@Html.EditorFor(model => model.CategoryDetailTemplate, "FieldEnum")
	@Html.EditorFor(model => model.ProductListTemplate, "FieldEnum")
	@Html.EditorFor(model => model.ProductDetailTemplate, "FieldEnum")
	@Html.EditorFor(model => model.ChildCategoryHeaderHtml, "FieldHtml")
	@Html.EditorFor(model => model.ChildCategoryFooterHtml, "FieldHtml")
	@Html.EditorFor(model => model.ProductHeaderHtml, "FieldHtml")
	@Html.EditorFor(model => model.ProductFooterHtml, "FieldHtml")
	@Html.EditorFor(model => model.NoProductsMessageHtml, "FieldHtml")

	@Html.EditorFor(model => model.DefaultSummaryCaption, "FieldText")
	@Html.EditorFor(model => model.DefaultTopDescriptionCaption, "FieldText")
	@Html.EditorFor(model => model.DefaultBottomDescriptionCaption, "FieldText")
	@Html.EditorFor(model => model.DefaultSampleImageCaption, "FieldText")
	@Html.EditorFor(model => model.DefaultSampleAudioCaption, "FieldText")
	@Html.EditorFor(model => model.DefaultSampleDownloadCaption, "FieldText")

	@Html.EditorFor(model => model.EndDateTimeUtc, "FieldDateTime")
	@Html.EditorFor(model => model.IsPending, "FieldCheckbox")
	@Html.EditorFor(model => model.StartDateTimeUtc, "FieldDateTime")

</div>

