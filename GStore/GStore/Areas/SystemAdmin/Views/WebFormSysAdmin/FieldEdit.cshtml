@model GStore.Models.WebFormField
@using GStore.AppHtmlHelpers
@using GStore.Models
@using GStore.Data

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

	<div class="row">
		<h2 class="jumbotron SysAdminCreatePageTitle col-md-offset-2 col-md-10 text-warning">
			Edit Web Form Field
			<br /><small>@Html.DisplayForModel("WebFormFieldNoLinks")</small>
		</h2>
	</div>

	<div class="row">
		<div class="form-actions col-md-offset-2 col-md-10">
			<input type="submit" value="Save" class="btn btn-warning" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Cancel", "FieldDetails", new { id = Model.WebFormFieldId }, new { @class = "btn btn-default" })
		</div>
	</div>

	<div class="row">
		<div class="form-validation col-md-offset-2 col-md-10">
			@Html.ValidationSummary(false, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.WebFormId)
			@Html.HiddenFor(model => model.WebFormFieldId)
			@Html.HiddenFor(model => model.ClientId)
			@Html.HiddenAuditFields()
		</div>
	</div>

	<div class="form-horizontal">

		<div class="form-group">
			@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.LabelText, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.LabelText, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.LabelText, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.HelpLabelTopText, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.HelpLabelTopText, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.HelpLabelTopText, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.HelpLabelBottomText, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.HelpLabelBottomText, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.HelpLabelBottomText, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.IsRequired, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.IsRequired, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.IsRequired, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DataType, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EnumDropDownListFor(model => model.DataType, new { @class = "form-control" } )
				@Html.ValidationMessageFor(model => model.DataType, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.TextAreaRows, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.TextAreaRows, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.TextAreaRows, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.TextAreaColumns, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.TextAreaColumns, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.TextAreaColumns, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.IsPending, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.IsPending, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.IsPending, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.StartDateTimeUtc, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.StartDateTimeUtc, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.StartDateTimeUtc, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.EndDateTimeUtc, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.EndDateTimeUtc, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.EndDateTimeUtc, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>

	<div class="row">
		<div class="form-actions col-md-offset-2 col-md-10">
			<input type="submit" value="Save" class="btn btn-warning" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Cancel", "FieldDetails", new { id = Model.WebFormFieldId }, new { @class = "btn btn-default" })
		</div>
	</div>
}

<hr />

<div>
	@Html.ActionLink("Back to Web Form Index", "Index")
</div>
