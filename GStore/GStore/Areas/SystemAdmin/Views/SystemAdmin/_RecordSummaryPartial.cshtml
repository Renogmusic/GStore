@model int?
@{
	IGstoreDb gstoreDb = GStore.Data.RepositoryFactory.SystemWideRepository(User.Identity.Name);
	int? clientId = Model;
	bool isFiltered = clientId.HasValue;
	if (clientId.HasValue && clientId.Value == -1)
	{
		isFiltered = false;
	}

	AjaxOptions formOptions = new AjaxOptions();
	formOptions.AllowCache = false;
	formOptions.InsertionMode = InsertionMode.Replace;
	formOptions.UpdateTargetId = "RecordSummary";

}
<div class="text-center">
	@using (Ajax.BeginForm("RecordSummary", null, formOptions, htmlAttributes: new { id = "clientIdForm" }))
	{
		@DateTime.UtcNow.ToLocalTime() @:&nbsp;&nbsp;|&nbsp;&nbsp; <input type="submit" value="Refresh" class="btn btn-sm btn-primary" />
		<br/>
		@Html.DropDownList("ClientId", Html.ClientFilterList(), htmlAttributes: new { @class="form-control", onchange = "$('#clientIdForm').trigger('submit');" })
	}
</div>
<div class="row">
	<div class="col-xs-12 btn btn-info NoClick">
		Main Records &nbsp;-&nbsp; Active / Total
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.Clients))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.Clients))
	</div>
	<div class="col-xs-4">
		@gstoreDb.Clients.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.Clients.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.StoreFronts))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.StoreFronts))
	</div>
	<div class="col-xs-4">
		@gstoreDb.StoreFronts.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.StoreFronts.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.StoreBindings))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.StoreBindings))
	</div>
	<div class="col-xs-4">
		@gstoreDb.StoreBindings.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.StoreBindings.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.StoreFrontConfigurations))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.StoreFrontConfigurations))
	</div>
	<div class="col-xs-4">
		@gstoreDb.StoreFrontConfigurations.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.StoreFrontConfigurations.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.UserProfiles))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.UserProfiles))
	</div>
	<div class="col-xs-4">
		@gstoreDb.UserProfiles.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.UserProfiles.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.Carts))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.Carts))
	</div>
	<div class="col-xs-4">
		@gstoreDb.Carts.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>

	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.CartItems))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.CartItems))
	</div>
	<div class="col-xs-4">
		@gstoreDb.CartItems.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.ProductCategories))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.ProductCategories))
	</div>
	<div class="col-xs-4">
		@gstoreDb.ProductCategories.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.ProductCategories.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.Products))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.Products))
	</div>
	<div class="col-xs-4">
		@gstoreDb.Products.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.Products.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.Discounts))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.Discounts))
	</div>
	<div class="col-xs-4">
		@gstoreDb.Discounts.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.Discounts.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.ProductReviews))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.ProductReviews))
	</div>
	<div class="col-xs-4">
		@gstoreDb.ProductReviews.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.ProductReviews.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>

	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.Notifications))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.Notifications))
	</div>
	<div class="col-xs-4">
		@gstoreDb.Notifications.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.NotificationLinks))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.NotificationLinks))
	</div>
	<div class="col-xs-4">
		@gstoreDb.NotificationLinks.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.WebFormResponses))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.WebFormResponses))
	</div>
	<div class="col-xs-4">
		@gstoreDb.WebFormResponses.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>

	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.WebFormFieldResponses))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.WebFormFieldResponses))
	</div>
	<div class="col-xs-4">
		@gstoreDb.WebFormFieldResponses.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>

	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.Pages))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.Pages))
	</div>
	<div class="col-xs-4">
		@gstoreDb.Pages.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.Pages.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.PageSections))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.PageSections))
	</div>
	<div class="col-xs-4">
		@gstoreDb.PageSections.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.PageSections.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-12"><hr /></div>

	<div class="col-xs-12 btn btn-info NoClick">
		Client Data Tables &nbsp;-&nbsp; Active / Total
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.PageTemplates))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.PageTemplates))
	</div>
	<div class="col-xs-4">
		@gstoreDb.PageTemplates.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.PageTemplates.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.PageTemplateSections))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.PageTemplateSections))
	</div>
	<div class="col-xs-4">
		@gstoreDb.PageTemplateSections.Where(c => !isFiltered || c.PageTemplate.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.PageTemplateSections.Where(c => !isFiltered || c.PageTemplate.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.Themes))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.Themes))
	</div>
	<div class="col-xs-4">
		@gstoreDb.Themes.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.Themes.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.WebForms))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.WebForms))
	</div>
	<div class="col-xs-4">
		@gstoreDb.WebForms.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.WebForms.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>

	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.WebFormFields))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.WebFormFields))
	</div>
	<div class="col-xs-4">
		@gstoreDb.WebFormFields.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.WebFormFields.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.ClientRoles))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.ClientRoles))
	</div>
	<div class="col-xs-4">
		@gstoreDb.ClientRoles.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.ClientRoles.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.ClientRoleActions))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.ClientRoleActions))
	</div>
	<div class="col-xs-4">
		@gstoreDb.ClientRoleActions.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.ClientRoleActions.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.ClientUserRoles))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.ClientUserRoles))
	</div>
	<div class="col-xs-4">
		@gstoreDb.ClientUserRoles.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.ClientUserRoles.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.NavBarItems))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.NavBarItems))
	</div>
	<div class="col-xs-4">
		@gstoreDb.NavBarItems.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.NavBarItems.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.ValueLists))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.ValueLists))
	</div>
	<div class="col-xs-4">
		@gstoreDb.ValueLists.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.ValueLists.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>

	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.ValueListItems))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.ValueListItems))
	</div>
	<div class="col-xs-4">
		@gstoreDb.ValueListItems.Where(c => !isFiltered || c.ClientId == clientId).WhereIsActive().Count().ToString("N0")
		&nbsp;/&nbsp;
		@gstoreDb.ValueListItems.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>

	<div class="col-xs-12"><hr /></div>

	<div class="col-xs-12 btn btn-info NoClick">
		Log Tables
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.BadRequests))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.BadRequests))
	</div>
	<div class="col-xs-4">
		@gstoreDb.BadRequests.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.FileNotFoundLogs))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.FileNotFoundLogs))
	</div>
	<div class="col-xs-4">
		@gstoreDb.FileNotFoundLogs.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.PageViewEvents))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.PageViewEvents))
	</div>
	<div class="col-xs-4">
		@gstoreDb.PageViewEvents.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.SecurityEvents))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.SecurityEvents))
	</div>
	<div class="col-xs-4">
		@gstoreDb.SecurityEvents.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.SystemEvents))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.SystemEvents))
	</div>
	<div class="col-xs-4">
		@gstoreDb.SystemEvents.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-8">
		@(Html.DisplayNameFor(m => gstoreDb.UserActionEvents))
		@(Html.HelpLabelPopoverFor(m => gstoreDb.UserActionEvents))
	</div>
	<div class="col-xs-4">
		@gstoreDb.UserActionEvents.Where(c => !isFiltered || c.ClientId == clientId).Count().ToString("N0")
	</div>
	<div class="col-xs-12">
		<hr />
	</div>

	<div class="col-xs-12 btn btn-info NoClick">
		System Log Files
	</div>
	<div class="col-xs-8">
		Log Exception Files:
		@if (GStore.Settings.AppLogLogExceptionsToFile)
		{
			@:Enabled
					}
		else
		{
			@:(only if db error)
					}
	</div>
	<div class="col-xs-4">
		@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_LogExceptions))
		&nbsp;-&nbsp;
		@Html.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_LogExceptions" })
	</div>
	<div class="col-xs-8">
		Bad Request Log Files:
		@if (GStore.Settings.AppLogBadRequestEventsToFile)
		{
			@:Enabled
					}
		else
		{
			@:(only if db error)
					}
	</div>
	<div class="col-xs-4">
		@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_BadRequests))
		&nbsp;-&nbsp;
		@Html.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_BadRequests" })
	</div>
	<div class="col-xs-8">
		File Not Found Log Files:
		@if (GStore.Settings.AppLogFileNotFoundEventsToFile)
		{
			@:Enabled
					}
		else
		{
			@:(only if db error)
					}
	</div>
	<div class="col-xs-4">
		@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_FileNotFoundLogs))
		&nbsp;-&nbsp;
		@Html.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_FileNotFoundLogs" })
	</div>
	<div class="col-xs-8">
		Page View Event Log Files:
		@if (GStore.Settings.AppLogPageViewEventsToFile)
		{
			@:Enabled
					}
		else
		{
			@:(only if db error)
					}
	</div>
	<div class="col-xs-4">
		@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_PageViewEvents))
		&nbsp;-&nbsp;
		@Html.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_PageViewEvents" })
	</div>
	<div class="col-xs-8">
		Security Event Log Files:
		@if (GStore.Settings.AppLogSecurityEventsToFile)
		{
			@:Enabled
					}
		else
		{
			@:(only if db error)
					}
	</div>
	<div class="col-xs-4">
		@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_SecurityEvents))
		&nbsp;-&nbsp;
		@Html.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_SecurityEvents" })
	</div>
	<div class="col-xs-8">
		System Event Log Files:
		@if (GStore.Settings.AppLogSystemEventsToFile)
		{
			@:Enabled
					}
		else
		{
			@:(only if db error)
					}
	</div>
	<div class="col-xs-4">
		@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_SystemEvents))
		&nbsp;-&nbsp;
		@Html.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_SystemEvents" })
	</div>
	<div class="col-xs-8">
		User Action Event Log Files:
		@if (GStore.Settings.AppLogUserActionEventsToFile)
		{
			@:Enabled
					}
		else
		{
			@:(only if db error)
					}
	</div>
	<div class="col-xs-4">
		@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_UserActionEvents))
		&nbsp;-&nbsp;
		@Html.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_UserActionEvents" })
	</div>
</div>
