@model GStore.Models.StoreFront
@using GStore.AppHtmlHelpers
@using (Html.BeginForm())
{
	SelectList userProfileList = ViewBag.UserProfileList as SelectList;
	SelectList clientList = ViewBag.ClientList as SelectList;
	SelectList themeList = ViewBag.ThemeList as SelectList;
	SelectList notFoundPageList = ViewBag.NotFoundPageList as SelectList;
	SelectList storeErrorPageList = ViewBag.StoreErrorPageList as SelectList;
	SelectList registerWebFormList = ViewBag.RegisterWebFormList as SelectList;

	@Html.AntiForgeryToken()

	<div class="row">
		<h2 class="jumbotron SysAdminEditPageTitle col-md-offset-2 col-md-10 text-warning title-align">Edit Store Front: '@(Model.Name)' [@(Model.StoreFrontId)]</h2>
	</div>
	
	<div class="row">
		<div class="form-actions col-md-offset-2 col-md-10">
			<input type="submit" value="Save" class="btn btn-warning" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Cancel", "Details", new { id = Model.StoreFrontId }, new { @class = "btn btn-default" })
		</div>
	</div>

	<div class="row">
		<div class="form-validation col-md-offset-2 col-md-10">
			@Html.ValidationSummary(false, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.StoreFrontId)
			@Html.HiddenAuditFields()
		</div>
	</div>
	
	<div class="form-horizontal">
		<div class="form-group">
			@Html.LabelFor(model => model.Client, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.DropDownList("ClientId", clientList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.PublicUrl, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.PublicUrl, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.PublicUrl, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Folder, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.Folder, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Folder, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.HtmlFooter, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.HtmlFooter, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.HtmlFooter, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.MetaApplicationName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.MetaApplicationName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.MetaApplicationName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.MetaApplicationTileColor, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.MetaApplicationTileColor, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.MetaApplicationTileColor, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.MetaDescription, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.MetaDescription, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.MetaKeywords, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.AccountLoginShowRegisterLink, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.AccountLoginShowRegisterLink, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.AccountLoginShowRegisterLink, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.AccountLoginRegisterLinkText, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.AccountLoginRegisterLinkText, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.AccountLoginRegisterLinkText, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.NavBarShowRegisterLink, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.NavBarShowRegisterLink, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.NavBarShowRegisterLink, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.NavBarRegisterLinkText, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.NavBarRegisterLinkText, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.NavBarRegisterLinkText, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.NavBarCatalogMaxLevels, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.NavBarCatalogMaxLevels, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.NavBarCatalogMaxLevels, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.CatalogPageInitialLevels, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.CatalogPageInitialLevels, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.CatalogPageInitialLevels, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.NavBarItemsMaxLevels, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.NavBarItemsMaxLevels, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.NavBarItemsMaxLevels, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DefaultNewPageTheme, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.DropDownList("DefaultNewPageThemeId", themeList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.DefaultNewPageThemeId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DefaultNewPageLayoutName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.DefaultNewPageLayoutName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.DefaultNewPageLayoutName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.AccountTheme, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.DropDownList("AccountThemeId", themeList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.AccountThemeId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.AccountLayoutName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.AccountLayoutName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.AccountLayoutName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.ProfileTheme, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.DropDownList("ProfileThemeId", themeList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.ProfileThemeId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.ProfileLayoutName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.ProfileLayoutName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.ProfileLayoutName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.NotificationsTheme, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.DropDownList("NotificationsThemeId", themeList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.NotificationsThemeId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.NotificationsLayoutName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.NotificationsLayoutName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.NotificationsLayoutName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.CatalogTheme, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.DropDownList("CatalogThemeId", themeList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.CatalogThemeId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.CatalogLayoutName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.CatalogLayoutName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.CatalogLayoutName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.AdminTheme, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.DropDownList("AdminThemeId", themeList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.AdminThemeId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.AdminLayoutName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.AdminLayoutName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.AdminLayoutName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.CatalogCategoryColSm, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.CatalogCategoryColSm, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.CatalogCategoryColSm, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.CatalogCategoryColMd, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.CatalogCategoryColMd, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.CatalogCategoryColMd, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.CatalogCategoryColLg, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.CatalogCategoryColLg, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.CatalogCategoryColLg, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.CatalogProductColSm, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.CatalogProductColSm, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.CatalogProductColSm, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.CatalogProductColMd, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.CatalogProductColMd, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.CatalogProductColMd, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.CatalogProductColLg, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.CatalogProductColLg, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.CatalogProductColLg, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.EnableGoogleAnalytics, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.EnableGoogleAnalytics, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.EnableGoogleAnalytics, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.GoogleAnalyticsWebPropertyId, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.GoogleAnalyticsWebPropertyId, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.GoogleAnalyticsWebPropertyId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.WelcomePerson, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.DropDownList("WelcomePerson_UserProfileId", userProfileList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.WelcomePerson_UserProfileId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.AccountAdmin, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.DropDownList("AccountAdmin_UserProfileId", userProfileList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.AccountAdmin_UserProfileId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.RegisteredNotify, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.DropDownList("RegisteredNotify_UserProfileId", userProfileList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.RegisteredNotify_UserProfileId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.RegisterWebForm, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.DropDownList("Register_WebFormId", registerWebFormList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Register_WebFormId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.NotFoundErrorPage, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.DropDownList("NotFoundError_PageId", notFoundPageList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.NotFoundError_PageId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.StoreErrorPage, null, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.DropDownList("StoreError_PageId", storeErrorPageList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.StoreError_PageId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.IsPending, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.IsPending, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.IsPending, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.StartDateTimeUtc, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.StartDateTimeUtc, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.StartDateTimeUtc, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.EndDateTimeUtc, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10 text-left">
				@Html.EditorFor(model => model.EndDateTimeUtc, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.EndDateTimeUtc, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>

	<div class="row">
		<div class="form-actions col-md-offset-2 col-md-10">
			<input type="submit" value="Save" class="btn btn-warning" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Cancel", "Details", new { id = Model.StoreFrontId }, new { @class = "btn btn-default" })
		</div>
	</div>
}

<hr/>

<div>
	@Html.ActionLink("Back to List", "Index")
</div>
