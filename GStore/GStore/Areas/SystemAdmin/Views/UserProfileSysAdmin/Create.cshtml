@model GStore.Models.UserProfile

@using (Html.BeginForm())
{
	SelectList userProfileList = ViewBag.UserProfileList as SelectList;

	bool createLoginAndIdentity = false;
	if (ViewData.ContainsKey("CreateLoginAndIdentity"))
	{
		createLoginAndIdentity = (bool)ViewData["CreateLoginAndIdentity"];
	}
	string password = string.Empty;
	{
		password = (string)ViewData["Password"];
	}

	bool sendWelcomeMessage = false;
	if (ViewData.ContainsKey("SendWelcomeMessage"))
	{
		sendWelcomeMessage = (bool)ViewData["SendWelcomeMessage"];
	}
	bool sendRegisteredNotify = false;
	if (ViewData.ContainsKey("SendRegisteredNotify"))
	{
		sendRegisteredNotify = (bool)ViewData["SendRegisteredNotify"];
	}

	@Html.AntiForgeryToken()

	<div class="row">
		<h2 class="jumbotron SysAdminCreatePageTitle col-md-offset-2 col-md-10 text-info title-align">
			New User Profile
		</h2>
	</div>

	<div class="row">
		<div class="form-actions col-md-offset-2 col-md-10">
			<input type="submit" value="Create" class="btn btn-info" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
		</div>
	</div>

	<div class="form-validation col-md-offset-2 col-md-10">
		@Html.ValidationSummary(false, "", new { @class = "text-danger" })
		@Html.HiddenAuditFieldsOptional()
	</div>

	<div class="row form-horizontal">
		@Html.EditorFor(model => model.Client, "ClientNullableWithPostback")
		@Html.EditorFor(model => model.StoreFront, "StoreFrontNullable")
		@Html.EditorFor(model => model.UserId)
		@Html.EditorFor(model => model.UserName)
		@Html.EditorFor(model => model.Email)
		@Html.EditorFor(model => model.FullName)
		@Html.EditorFor(model => model.Order)
		@Html.EditorFor(model => model.SignupNotes)
		@Html.EditorFor(model => model.SendMoreInfoToEmail)
		@Html.EditorFor(model => model.EntryDateTime)
		@Html.EditorFor(model => model.EntryRawUrl)
		@Html.EditorFor(model => model.EntryUrl)
		@Html.EditorFor(model => model.EntryReferrer)
		@Html.EditorFor(model => model.AllowUsersToSendSiteMessages)
		@Html.EditorFor(model => model.NotifyAllWhenLoggedOn)
		@Html.EditorFor(model => model.NotifyOfSiteUpdatesToEmail)
		@Html.EditorFor(model => model.SubscribeToNewsletterEmail)
		@Html.EditorFor(model => model.SendSiteMessagesToEmail)
		@Html.EditorFor(model => model.SendSiteMessagesToSms)
		@Html.EditorFor(model => model.IsPending)
		@Html.EditorFor(model => model.StartDateTimeUtc)
		@Html.EditorFor(model => model.EndDateTimeUtc)

		<div class="form-group">
			<label for="SendWelcomeMessage" class="control-label col-md-2">
				Send Welcome Notification
			</label>
			<div class="col-md-10 text-left">
				@Html.CheckBox("SendUserWelcome", sendWelcomeMessage, new { @class = "form-control" })
				<small>Uncheck to not send notification to user's notifications box when user is created</small>
			</div>
		</div>


		<div class="form-group">
			<label for="SendRegisteredNotify" class="control-label col-md-2">
				Send Notification to Registered Notify User for Store
			</label>
			<div class="col-md-10 text-left">
				@Html.CheckBox("SendRegisteredNotify", sendRegisteredNotify, new { @class = "form-control" })
				<small>Uncheck to not send notification to registered notify person for store</small>
			</div>
		</div>

		<div class="form-group">
			<label for="CreateLoginAndIdentity" class="control-label col-md-2">
				Create Login and Identity
			</label>
			<div class="col-md-10 text-left">
				@Html.CheckBox("CreateLoginAndIdentity", createLoginAndIdentity, new { @class = "form-control" })
				<small>Uncheck to not link a login identity</small>
			</div>
		</div>

		<div class="form-group">
			<label for="Password" class="control-label col-md-2">
				Password
			</label>
			<div class="col-md-10 text-left">
				@Html.TextBox("Password", password, new { @class = "form-control" })
			</div>
		</div>
	</div>
	
	<div class="row">
		<div class="form-actions col-md-offset-2 col-md-10">
			<input type="submit" value="Create" class="btn btn-info" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
		</div>
	</div>
}
