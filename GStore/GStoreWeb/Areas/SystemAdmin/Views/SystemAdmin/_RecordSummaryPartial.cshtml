@model Tuple<int?, int?>
@{
	AjaxOptions ajaxOptions = new AjaxOptions() { AllowCache = false, InsertionMode = InsertionMode.Replace, UpdateTargetId = "RecordSummary", OnFailure = "handleErrorDatabase" };

	IGstoreDb gstoreDb = GStoreData.RepositoryFactory.SystemWideRepository(User.Identity.Name);
	int? clientId = Model.Item1;
	int storeFrontId = Model.Item2 ?? -1;
	
	//default for empty client id = null (none)
	//default for blank storeFrontId = all (-1)
	//no NONE option for storefrontid
	bool clientIsFiltered = clientId.HasValue;
	if (clientId.HasValue && (clientId.Value == -1))
	{
		clientIsFiltered = false;
	}

	bool storeFrontIsFiltered = (storeFrontId != -1);

	AjaxOptions formOptions = new AjaxOptions();
	formOptions.AllowCache = false;
	formOptions.InsertionMode = InsertionMode.Replace;
	formOptions.UpdateTargetId = "RecordSummary";

	string clientFilterBorder = clientIsFiltered ?  "red" : "green";
	string storeFrontFilterBorder = storeFrontIsFiltered ? "red" : "green";
	if (!storeFrontIsFiltered && clientIsFiltered && (!clientId.HasValue || clientId.Value == 0))
	{
		storeFrontFilterBorder = "red";
	}

	IEnumerable<SelectListItem> clientFilterList = Html.ClientFilterListForRecordSummary(clientId, labelForAll: "(ALL CLIENTS)", labelForNull: "(NO CLIENT)");
	IEnumerable<SelectListItem> storeFrontFilterList = Html.StoreFrontFilterListForRecordSummary(clientId, storeFrontId, "(All Store Fronts)", "[select a client]");
	
}
<script>
	$(document).ready(function ()
	{
		$('[data-toggle="popover"]').popover()
	});
</script>

<div class="text-center">
	@using (Ajax.BeginForm("RecordSummary", null, formOptions, htmlAttributes: new { id = "clientIdForm" }))
	{
		<input id="ClientIdChanged" type="hidden" name="ClientIdChanged" value="false" />
		@DateTime.UtcNow.ToUserDateTimeString(Html) @:&nbsp;&nbsp;|&nbsp;&nbsp; <input type="submit" accesskey="R" value="Refresh" class="btn btn-sm btn-primary" />
		<br />
		@Html.DropDownList("ClientId", clientFilterList, htmlAttributes: new { @style = "border: 3px solid " + clientFilterBorder + ";", @class = "form-control", onchange = "$('#ClientIdChanged').val('true');$('#clientIdForm').trigger('submit');" })
		<br/>
		@Html.DropDownList("StoreFrontId", storeFrontFilterList , htmlAttributes: new { @style="border: 3px solid " + storeFrontFilterBorder + ";", @class = "form-control", onchange = "$('#clientIdForm').trigger('submit');" })
	}
</div>

<div id="MainRecords" class="row">
	<div class="col-xs-12 btn btn-info NoClick">
		Main Records &nbsp;-&nbsp; Active / Total
	</div>
	<div class="SummaryDetails">
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.Clients))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.Clients))
		</div>
		<div class="col-xs-4">
			@gstoreDb.Clients.Where(c => (!clientIsFiltered || c.ClientId == clientId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.Clients.Where(c => (!clientIsFiltered || c.ClientId == clientId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.StoreFronts))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.StoreFronts))
		</div>
		<div class="col-xs-4">
			@gstoreDb.StoreFronts.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.StoreFronts.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.StoreBindings))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.StoreBindings))
		</div>
		<div class="col-xs-4">
			@gstoreDb.StoreBindings.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.StoreBindings.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.StoreFrontConfigurations))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.StoreFrontConfigurations))
		</div>
		<div class="col-xs-4">
			@gstoreDb.StoreFrontConfigurations.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.StoreFrontConfigurations.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.UserProfiles))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.UserProfiles))
		</div>
		<div class="col-xs-4">
			@gstoreDb.UserProfiles.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.UserProfiles.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
	</div>
	<div class="col-xs-12">
		<hr />
	</div>
</div>

<div id="CartAndOrderRecords" class="row">
	<div class="col-xs-12 btn btn-info NoClick">
		Cart and Order Records &nbsp;-&nbsp; Active / Total
	</div>
	<div class="SummaryDetails">
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.Discounts))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.Discounts))
		</div>
		<div class="col-xs-4">
			@gstoreDb.Discounts.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.Discounts.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.GiftCards))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.GiftCards))
		</div>
		<div class="col-xs-4">
			@gstoreDb.GiftCards.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.GiftCards.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.Carts))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.Carts))
		</div>
		<div class="col-xs-4">
			@gstoreDb.Carts.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.CartBundles))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.CartBundles))
		</div>
		<div class="col-xs-4">
			@gstoreDb.CartBundles.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.CartItems))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.CartItems))
		</div>
		<div class="col-xs-4">
			@gstoreDb.CartItems.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.CartPaymentInfos))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.CartPaymentInfos))
		</div>
		<div class="col-xs-4">
			@gstoreDb.CartPaymentInfos.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.DeliveryInfoDigitals))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.DeliveryInfoDigitals))
		</div>
		<div class="col-xs-4">
			@gstoreDb.DeliveryInfoDigitals.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.DeliveryInfoShippings))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.DeliveryInfoShippings))
		</div>
		<div class="col-xs-4">
			@gstoreDb.DeliveryInfoShippings.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.Orders))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.Orders))
		</div>
		<div class="col-xs-4">
			@gstoreDb.Orders.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.OrderBundles))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.OrderBundles))
		</div>
		<div class="col-xs-4">
			@gstoreDb.OrderBundles.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.OrderItems))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.OrderItems))
		</div>
		<div class="col-xs-4">
			@gstoreDb.OrderItems.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.Payments))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.Payments))
		</div>
		<div class="col-xs-4">
			@gstoreDb.Payments.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
	</div>

	<div class="col-xs-12">
		<hr />
	</div>
</div>

<div id="MessagingRecords" class="row">
	<div class="col-xs-12 btn btn-info NoClick">
		Messaging Records &nbsp;-&nbsp; Active / Total
	</div>
	<div class="SummaryDetails">
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.Notifications))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.Notifications))
		</div>
		<div class="col-xs-4">
			@gstoreDb.Notifications.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.NotificationLinks))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.NotificationLinks))
		</div>
		<div class="col-xs-4">
			@gstoreDb.NotificationLinks.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.WebFormResponses))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.WebFormResponses))
		</div>
		<div class="col-xs-4">
			@gstoreDb.WebFormResponses.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>

		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.WebFormFieldResponses))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.WebFormFieldResponses))
		</div>
		<div class="col-xs-4">
			@gstoreDb.WebFormFieldResponses.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
	</div>
	<div class="col-xs-12">
		<hr />
	</div>
</div>

<div id="CatalogRecords" class="row">
	<div class="col-xs-12 btn btn-info NoClick">
		Catalog Records &nbsp;-&nbsp; Active / Total
	</div>
	<div class="SummaryDetails">
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.ProductCategories))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.ProductCategories))
		</div>
		<div class="col-xs-4">
			@gstoreDb.ProductCategories.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.ProductCategories.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.Products))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.Products))
		</div>
		<div class="col-xs-4">
			@gstoreDb.Products.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.Products.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.ProductBundles))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.ProductBundles))
		</div>
		<div class="col-xs-4">
			@gstoreDb.ProductBundles.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.ProductBundles.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.ProductBundleItems))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.ProductBundleItems))
		</div>
		<div class="col-xs-4">
			@gstoreDb.ProductBundleItems.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.ProductBundleItems.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
	</div>
	<div class="col-xs-12">
		<hr />
	</div>
</div>

<div id="ContentAndSecurityRecords" class="row">
	<div class="col-xs-12 btn btn-info NoClick">
		Content and Security Records &nbsp;-&nbsp; Active / Total
	</div>
	<div class="SummaryDetails">
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.Pages))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.Pages))
		</div>
		<div class="col-xs-4">
			@gstoreDb.Pages.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.Pages.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.PageSections))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.PageSections))
		</div>
		<div class="col-xs-4">
			@gstoreDb.PageSections.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.PageSections.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.PageTemplates))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.PageTemplates))
		</div>
		<div class="col-xs-4">
			@gstoreDb.PageTemplates.Where(c => (!clientIsFiltered || c.ClientId == clientId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.PageTemplates.Where(c => (!clientIsFiltered || c.ClientId == clientId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.PageTemplateSections))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.PageTemplateSections))
		</div>
		<div class="col-xs-4">
			@gstoreDb.PageTemplateSections.Where(c => !clientIsFiltered || c.PageTemplate.ClientId == clientId).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.PageTemplateSections.Where(c => !clientIsFiltered || c.PageTemplate.ClientId == clientId).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.Themes))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.Themes))
		</div>
		<div class="col-xs-4">
			@gstoreDb.Themes.Where(c => (!clientIsFiltered || c.ClientId == clientId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.Themes.Where(c => (!clientIsFiltered || c.ClientId == clientId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.WebForms))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.WebForms))
		</div>
		<div class="col-xs-4">
			@gstoreDb.WebForms.Where(c => (!clientIsFiltered || c.ClientId == clientId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.WebForms.Where(c => (!clientIsFiltered || c.ClientId == clientId)).Count().ToString("N0")
		</div>

		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.WebFormFields))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.WebFormFields))
		</div>
		<div class="col-xs-4">
			@gstoreDb.WebFormFields.Where(c => (!clientIsFiltered || c.ClientId == clientId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.WebFormFields.Where(c => (!clientIsFiltered || c.ClientId == clientId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.ClientRoles))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.ClientRoles))
		</div>
		<div class="col-xs-4">
			@gstoreDb.ClientRoles.Where(c => (!clientIsFiltered || c.ClientId == clientId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.ClientRoles.Where(c => (!clientIsFiltered || c.ClientId == clientId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.ClientRoleActions))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.ClientRoleActions))
		</div>
		<div class="col-xs-4">
			@gstoreDb.ClientRoleActions.Where(c => (!clientIsFiltered || c.ClientId == clientId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.ClientRoleActions.Where(c => (!clientIsFiltered || c.ClientId == clientId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.ClientUserRoles))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.ClientUserRoles))
		</div>
		<div class="col-xs-4">
			@gstoreDb.ClientUserRoles.Where(c => (!clientIsFiltered || c.ClientId == clientId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.ClientUserRoles.Where(c => (!clientIsFiltered || c.ClientId == clientId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.NavBarItems))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.NavBarItems))
		</div>
		<div class="col-xs-4">
			@gstoreDb.NavBarItems.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.NavBarItems.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.ValueLists))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.ValueLists))
		</div>
		<div class="col-xs-4">
			@gstoreDb.ValueLists.Where(c => (!clientIsFiltered || c.ClientId == clientId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.ValueLists.Where(c => (!clientIsFiltered || c.ClientId == clientId)).Count().ToString("N0")
		</div>

		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.ValueListItems))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.ValueListItems))
		</div>
		<div class="col-xs-4">
			@gstoreDb.ValueListItems.Where(c => (!clientIsFiltered || c.ClientId == clientId)).WhereIsActive().Count().ToString("N0")
			&nbsp;/&nbsp;
			@gstoreDb.ValueListItems.Where(c => (!clientIsFiltered || c.ClientId == clientId)).Count().ToString("N0")
		</div>

	</div>
	<div class="col-xs-12">
		<hr />
	</div>
</div>

<div id="LogRecords" class="row">
	<div class="col-xs-12 btn btn-info NoClick">
		Log Tables
	</div>
	<div class="SummaryDetails">
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.BadRequests))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.BadRequests))
		</div>
		<div class="col-xs-4">
			@gstoreDb.BadRequests.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.FileNotFoundLogs))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.FileNotFoundLogs))
		</div>
		<div class="col-xs-4">
			@gstoreDb.FileNotFoundLogs.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.PageViewEvents))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.PageViewEvents))
		</div>
		<div class="col-xs-4">
			@gstoreDb.PageViewEvents.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.SecurityEvents))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.SecurityEvents))
		</div>
		<div class="col-xs-4">
			@gstoreDb.SecurityEvents.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.SystemEvents))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.SystemEvents))
		</div>
		<div class="col-xs-4">
			@gstoreDb.SystemEvents.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.UserActionEvents))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.UserActionEvents))
		</div>
		<div class="col-xs-4">
			@gstoreDb.UserActionEvents.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.EmailsSent))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.EmailsSent))
		</div>
		<div class="col-xs-4">
			@gstoreDb.EmailsSent.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-8">
			@(Html.DisplayNameFor(m => gstoreDb.SmssSent))
			@(Html.HelpLabelPopoverFor(m => gstoreDb.SmssSent))
		</div>
		<div class="col-xs-4">
			@gstoreDb.SmssSent.Where(c => (!clientIsFiltered || c.ClientId == clientId) && (!storeFrontIsFiltered || c.StoreFrontId == storeFrontId)).Count().ToString("N0")
		</div>
		<div class="col-xs-12">
			<hr />
		</div>
	</div>
</div>

<div id="SystemLogFiles" class="row">
	<div class="col-xs-12 btn btn-info NoClick">
		System Log Files
	</div>
	<div class="SummaryDetails">
		<div class="col-xs-8">
			Log Exception Files:
			@if (GStoreData.Settings.AppLogLogExceptionsToFile)
			{
				@:Enabled
			}
			else
			{
				@:(only if db error)
			}
		</div>
		<div class="col-xs-4">
			@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_LogExceptions))
			&nbsp;-&nbsp;
			@Ajax.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_LogExceptions", filterClientId = clientId, filterStoreFrontId = storeFrontId }, ajaxOptions)
		</div>
		<div class="col-xs-8">
			Bad Request Log Files:
			@if (GStoreData.Settings.AppLogBadRequestEventsToFile)
			{
				@:Enabled
			}
			else
			{
				@:(only if db error)
			}
		</div>
		<div class="col-xs-4">
			@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_BadRequests))
			&nbsp;-&nbsp;
			@Ajax.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_BadRequests", filterClientId = clientId, filterStoreFrontId = storeFrontId }, ajaxOptions)
		</div>
		<div class="col-xs-8">
			File Not Found Log Files:
			@if (GStoreData.Settings.AppLogFileNotFoundEventsToFile)
			{
				@:Enabled
			}
			else
			{
				@:(only if db error)
			}
		</div>
		<div class="col-xs-4">
			@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_FileNotFoundLogs))
			&nbsp;-&nbsp;
			@Ajax.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_FileNotFoundLogs", filterClientId = clientId, filterStoreFrontId = storeFrontId }, ajaxOptions)
		</div>
		<div class="col-xs-8">
			Page View Event Log Files:
			@if (GStoreData.Settings.AppLogPageViewEventsToFile)
			{
				@:Enabled
			}
			else
			{
				@:(only if db error)
			}
		</div>
		<div class="col-xs-4">
			@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_PageViewEvents))
			&nbsp;-&nbsp;
			@Ajax.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_PageViewEvents", filterClientId = clientId, filterStoreFrontId = storeFrontId }, ajaxOptions)
		</div>
		<div class="col-xs-8">
			Security Event Log Files:
			@if (GStoreData.Settings.AppLogSecurityEventsToFile)
			{
				@:Enabled
			}
			else
			{
				@:(only if db error)
			}
		</div>
		<div class="col-xs-4">
			@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_SecurityEvents))
			&nbsp;-&nbsp;
			@Ajax.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_SecurityEvents", filterClientId = clientId, filterStoreFrontId = storeFrontId }, ajaxOptions)
		</div>
		<div class="col-xs-8">
			System Event Log Files:
			@if (GStoreData.Settings.AppLogSystemEventsToFile)
			{
				@:Enabled
			}
			else
			{
				@:(only if db error)
			}
		</div>
		<div class="col-xs-4">
			@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_SystemEvents))
			&nbsp;-&nbsp;
			@Ajax.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_SystemEvents", filterClientId = clientId, filterStoreFrontId = storeFrontId }, ajaxOptions)
		</div>
		<div class="col-xs-8">
			User Action Event Log Files:
			@if (GStoreData.Settings.AppLogUserActionEventsToFile)
			{
				@:Enabled
			}
			else
			{
				@:(only if db error)
			}
		</div>
		<div class="col-xs-4">
			@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_UserActionEvents))
			&nbsp;-&nbsp;
			@Ajax.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_UserActionEvents", filterClientId = clientId, filterStoreFrontId = storeFrontId }, ajaxOptions)
		</div>
		<div class="col-xs-8">
			Email Sent Log Files:
			@if (GStoreData.Settings.AppLogEmailSentToFile)
			{
				@:Enabled
					}
			else
			{
				@:(only if db error)
			}
		</div>
		<div class="col-xs-4">
			@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_EmailSent))
			&nbsp;-&nbsp;
			@Ajax.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_EmailSent", filterClientId = clientId, filterStoreFrontId = storeFrontId }, ajaxOptions)
		</div>
		<div class="col-xs-8">
			SMS Sent Log Files:
			@if (GStoreData.Settings.AppLogSmsSentToFile)
			{
				@:Enabled
			}
			else
			{
				@:(only if db error)
			}
		</div>
		<div class="col-xs-4">
			@(Html.LogFolderFileCount(EventLogExtensions.GStoreFolder_SmsSent))
			&nbsp;-&nbsp;
			@Ajax.ActionLink("Clear", "ClearLogFolder", new { folder = "GStoreFolder_SmsSent", filterClientId = clientId, filterStoreFrontId = storeFrontId }, ajaxOptions)
		</div>
	</div>
	<div class="col-xs-4">
		@Ajax.ActionLink("Clear all Log Files", "ClearAllLogs", new { filterClientId = clientId, filterStoreFrontId = storeFrontId}, ajaxOptions)
	</div>
</div>
@Html.RenderUserMessages()
@Html.RenderUserMessagesBottom()
