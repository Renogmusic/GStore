@model bool?
@{
	AjaxOptions formOptions = new AjaxOptions();
	formOptions.AllowCache = false;
	formOptions.InsertionMode = InsertionMode.Replace;
	formOptions.UpdateTargetId = "FileSystemSummary";

	string rootVirtualPath = "~/Content/Clients";
	string rootPath = Server.MapPath(rootVirtualPath);
	DirectoryInfo rootFolder = null;
	List<DirectoryInfo> clientFolders = new List<DirectoryInfo>();
	if (System.IO.Directory.Exists(rootPath))
	{
		rootFolder = new DirectoryInfo(rootPath);
		clientFolders = rootFolder.GetDirectories().OrderBy(d => d.FullName).ToList();
	}

	bool showEmptyFolders = Model ?? false;
}
<script>
	$(document).ready(function ()
	{
		$('[data-toggle="popover"]').popover()
	});
</script>

<div class="text-center">
	@using (Ajax.BeginForm("FileSystemSummary", null, formOptions, htmlAttributes: new { id = "FileSystemForm" }))
	{
		<input id="ShowEmptyFolders" type="checkbox" value="true" onclick="$('#FileSystemForm').trigger('submit');" name="ShowEmptyFolders" @(showEmptyFolders ? "checked=\"checked\"" : "")>
		<label for="ShowEmptyFolders">Show Empty Folders</label>
		@DateTime.UtcNow.ToUserDateTimeString(Html) @:&nbsp;&nbsp;|&nbsp;&nbsp; <input id="RefreshFileSystemInfo" type="submit" accesskey="R" value="Refresh" class="btn btn-sm btn-primary" />
	}
</div>
<style>
	.Empty
	{
		font-weight: lighter;
	}

	.HasFiles
	{
		font-weight: bolder;
	}
</style>

<p>
	Client Folders '@(rootVirtualPath)'
	<br />
	File system at '@(rootPath)'
	<br />
	@(showEmptyFolders ? "" : "Not") Showing empty folders
</p>
<div id="ClientFolders" class="row">
	<div class="col-xs-12 btn btn-info NoClick">
		Client Folders @(clientFolders.Count)
	</div>
	<div class="ClientFolderDetails">
		@if (rootFolder == null)
		{
			@:<h2 class="text-danger">Client Root folder '@(rootVirtualPath)' could not be found in file system at '@(rootPath)'</h2>
		}
		else if (clientFolders.Count == 0)
		{
			@:<h2 class="text-danger">No Client folders were found at '@(rootVirtualPath)' in file system at '@(rootPath)'</h2>
		}
		else
		{
			foreach (DirectoryInfo folder in clientFolders)
			{
				FileInfo[] filesDirect = folder.GetFiles("*.*", SearchOption.TopDirectoryOnly);
				FileInfo[] filesAll = folder.GetFiles("*.*", SearchOption.AllDirectories);
				int fileCountDirect = filesDirect.Count();
				int fileCountAll = filesAll.Count();
				long sizeDirect = filesDirect.Sum(f => f.Length);
				long sizeAll = filesAll.Sum(f => f.Length);
				if (showEmptyFolders || fileCountAll != 0)
				{
					<div class="col-xs-4">
						@(folder.Name)
					</div>
					<div class="col-xs-4">
						@(fileCountDirect.ToString("N0")) file@(fileCountDirect == 1 ? "" : "s")
						&nbsp;/&nbsp;
						@(fileCountAll.ToString("N0")) file@(fileCountAll == 1 ? "" : "s")
					</div>
					<div class="col-xs-4">
						@if (fileCountAll == 0)
						{
							@:-
						}
						else
						{
							@(sizeDirect.ToByteString())
							@:&nbsp/&nbsp;
							@(sizeAll.ToByteString())
						}
					</div>
				}
			}
		}
		<div class="col-xs-12">
			<hr />
		</div>
	</div>
</div>

@if (rootFolder != null)
{
	<div id="FolderView" class="row">
		@foreach (DirectoryInfo clientFolder in clientFolders)
		{
			List<DirectoryInfo> folders = clientFolder.GetDirectories("*", SearchOption.AllDirectories).OrderBy(f => f.FullName).ToList();

			<div class="col-xs-12 btn btn-info NoClick">
				Client '@(clientFolder.Name)'
			</div>
			<div class="FolderViewDetails">
				@foreach (DirectoryInfo folder in folders)
				{
					FileInfo[] filesDirect = folder.GetFiles("*.*", SearchOption.TopDirectoryOnly);
					FileInfo[] filesAll = folder.GetFiles("*.*", SearchOption.AllDirectories);
					int fileCountDirect = filesDirect.Count();
					int fileCountAll = filesAll.Count();
					long sizeDirect = filesDirect.Sum(f => f.Length);
					long sizeAll = filesAll.Sum(f => f.Length);
					
					string rowClass = fileCountAll == 0 ? "Empty" : "HasFiles";
					if (showEmptyFolders || fileCountAll != 0)
					{
						<div class="row @(rowClass)">
							<div class="col-xs-8">
								@(folder.FullName.Replace(clientFolder.FullName + "\\", ""))
							</div>
							<div class="col-xs-2">
								@(fileCountDirect.ToString("N0")) file@(fileCountDirect == 1 ? "" : "s")
								&nbsp;/&nbsp;
								@(fileCountAll.ToString("N0")) file@(fileCountAll == 1 ? "" : "s")
							</div>
							<div class="col-xs-2">
								@if (fileCountAll == 0)
								{
									@:-
								}
								else
								{
									@(sizeDirect.ToByteString())
									@:&nbsp;/&nbsp;
									@(sizeAll.ToByteString())
								}
							</div>
						</div>
					}
				}
				<div class="col-xs-12">
					<hr />
				</div>
			</div>
		}
	</div>
}