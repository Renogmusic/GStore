@model Client
@{ 
	ViewData.SetColDisplay(0, 2, 8);
	bool populateThemes = false;
	bool populatePageTemplates = false;
	bool populateSampleWebForms = false;
}
@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="row">
		<h2 class="jumbotron SysAdminEditPageTitle col-md-offset-2 col-md-10 text-warning title-align">Edit Client: '@(Model.Name)' [@(Model.ClientId)]</h2>
	</div>

	<div class="row">
		<div class="form-actions col-md-offset-2 col-md-10">
			<input type="submit" value="Save" class="btn btn-warning" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Cancel", "Details", new { id = Model.ClientId }, new { @class = "btn btn-default" })
		</div>
	</div>

	<div class="row">
		<div class="form-validation col-md-offset-2 col-md-10">
			@Html.ValidationSummary(false, "", new { @class = "text-danger" })
			@Html.HiddenAuditFields()
		</div>
	</div>
	
	<div class="form-horizontal">
		@Html.EditorFor(model => model.ClientId, "FieldKey")
		@Html.EditorFor(model => model.Name, "FieldText")
		@Html.EditorFor(model => model.Folder, "FieldText")
		@Html.EditorFor(model => model.Order, "FieldInt")
		@Html.EditorFor(model => model.TimeZoneId, "FieldTimeZone")
		@Html.EditorFor(model => model.EnablePageViewLog, "FieldCheckbox")
		@Html.EditorFor(model => model.EnableNewUserRegisteredBroadcast, "FieldCheckbox")
		@Html.EditorFor(model => model.UseSendGridEmail, "FieldCheckbox")
		@Html.EditorFor(model => model.SendGridMailAccount, "FieldText")
		@Html.EditorFor(model => model.SendGridMailPassword, "FieldText")
		@Html.EditorFor(model => model.SendGridMailFromEmail, "FieldEmail")
		@Html.EditorFor(model => model.SendGridMailFromName, "FieldText")
		@Html.EditorFor(model => model.UseTwilioSms, "FieldCheckbox")
		@Html.EditorFor(model => model.TwilioSid, "FieldText")
		@Html.EditorFor(model => model.TwilioToken, "FieldText")
		@Html.EditorFor(model => model.TwilioFromPhone, "FieldText")
		@Html.EditorFor(model => model.TwilioSmsFromName, "FieldText")
		@Html.EditorFor(model => model.TwilioSmsFromEmail, "FieldEmail")
		@Html.EditorFor(model => model.IsPending, "FieldCheckbox")
		@Html.EditorFor(model => model.StartDateTimeUtc, "FieldDateTime")
		@Html.EditorFor(model => model.EndDateTimeUtc, "FieldDateTime")
		@Html.EditorFor(model => populateThemes, "FieldCheckbox", new { labelText = "Populate Themes" })
		@Html.EditorFor(model => populatePageTemplates, "FieldCheckbox", new { labelText = "Populate Page Templates" })
		@Html.EditorFor(model => populateSampleWebForms, "FieldCheckbox", new { labelText = "Populate Sample Web Forms" })


	</div>
	
	<div class="row">
		<div class="form-actions col-md-offset-2 col-md-10">
			<input type="submit" value="Save" class="btn btn-warning" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Cancel", "Details", new { id = Model.ClientId }, new { @class = "btn btn-default" })
		</div>
	</div>
}

<hr/>

<div>
	@Html.ActionLink("Back to List", "Index")
</div>
