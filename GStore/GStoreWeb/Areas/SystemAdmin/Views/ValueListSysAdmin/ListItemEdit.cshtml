@model ValueListItem

@{ ViewData.SetColDisplay(0, 2, 8); }
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

	<div class="row">
		<h2 class="jumbotron SysAdminCreatePageTitle col-md-offset-2 col-md-10 text-warning">
			Edit Value List Item
			<br /><small>@Html.DisplayForModel("ValueListItemNoLinks")</small>
		</h2>
	</div>

	<div class="row">
		<div class="form-actions col-md-offset-2 col-md-10">
			<input type="submit" value="Save" class="btn btn-warning" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Cancel", "ListItemDetails", new { id = Model.ValueListItemId }, new { @class = "btn btn-default" })
		</div>
	</div>

	<div class="row">
		<div class="form-validation col-md-offset-2 col-md-10">
			@Html.ValidationSummary(false, "", new { @class = "text-danger" })
			@Html.HiddenAuditFields()
		</div>
	</div>
	
    <div class="form-horizontal">
		@Html.EditorFor(model => model.ClientId, "FieldKey")
		@Html.EditorFor(model => model.ValueListId, "FieldKey")
		@Html.EditorFor(model => model.ValueListItemId, "FieldKey")
		@Html.EditorFor(model => model.Name, "FieldText")
		@Html.EditorFor(model => model.Description, "FieldTextArea")
		@Html.EditorFor(model => model.Order, "FieldInt")
		@Html.EditorFor(model => model.IsInteger, "FieldCheckbox")
		@Html.EditorFor(model => model.IntegerValue, "FieldInt")
		@Html.EditorFor(model => model.IsString, "FieldCheckbox")
		@Html.EditorFor(model => model.StringValue, "FieldText")
		@Html.EditorFor(model => model.IsPending, "FieldCheckbox")
		@Html.EditorFor(model => model.StartDateTimeUtc, "FieldDateTime")
		@Html.EditorFor(model => model.EndDateTimeUtc, "FieldDateTime")
    </div>
	
	<div class="row">
		<div class="form-actions col-md-offset-2 col-md-10">
			<input type="submit" value="Save" class="btn btn-warning" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Cancel", "ListItemDetails", new { id = Model.ValueListItemId }, new { @class = "btn btn-default" })
		</div>
	</div>
}

<hr />

<div>
	@Html.ActionLink("Back to Value List Index", "Index")
</div>
