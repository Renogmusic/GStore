@model IEnumerable<StoreBinding>

@{
	bool isFiltered = Html.ClientIsFiltered();
	int? filterClientId = Html.FilterClientId();
	int? storeFrontId = ViewData["StoreFrontId"] as int?;
}
<style>
	table th
	{
		text-align: center;
	}
	table td
	{
		text-align: center;
	}
</style>
<h2 class="jumbotron SysAdminIndexPageTitle col-md-12">Store Bindings Manager</h2>
<hr />
@Html.ActionLink("OK", "Index", "StoreFrontSysAdmin", new { id = storeFrontId }, new { @class = "btn btn-default" })
<hr />
<p>
	@Html.ActionLink("Create New", "Create", new { clientId = filterClientId}, new { @class = "btn btn-info" })
	<hr />
</p>
@if (Model.Count() == 0)
{
	if (isFiltered && (!filterClientId.HasValue || filterClientId.Value == 0))
	{
		<h2 class="text-info">No Client Selected.</h2>
		<h3 class="text-info">@Html.ActionLink("Click here to Show records for All Clients", "Index", new { ClientId = "-1" }, null)</h3>
		<h3 class="text-info">@Html.ActionLink("Click here to Create a New Store Binding", "Create", new { clientId = filterClientId }, new { @class = "btn btn-info" })</h3>
	}
	else if (isFiltered)
	{
		<h2 class="text-info">No Store Bindings found for the selected client.</h2>
		<h3 class="text-info">@Html.ActionLink("Click here to Clear Filter", "Index", new { ClientId = "-1" }, null)</h3>
		<h3 class="text-info">@Html.ActionLink("Click here to Create a New Store Binding", "Create", new { clientId = filterClientId }, new { @class = "btn btn-info" })</h3>
	}
	else
	{
		<h2 class="text-info">No Store Bindings in database.</h2>
		<h3 class="text-info">@Html.ActionLink("Click here to Create a New Store Binding", "Create", new { clientId = filterClientId }, new { @class = "btn btn-info" })</h3>
		<h3 class="text-info">@Html.ActionLink("Click here to Create a New Store Front", "Create", "StoreFrontSysAdmin", new { clientId = filterClientId }, new { @class = "btn btn-info" })</h3>
		<h3 class="text-info">@Html.ActionLink("Click here to Create a New Client", "Create", "ClientSysAdmin", null, new { @class = "btn btn-info" })</h3>
	}
}
else
{
	<div class="table-responsive">
		<table class="table table-hover table-striped">

			<tr>
				<th>@Html.ActionSortLink("Default Sort", "Index", string.Empty)</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.ClientId, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.Client, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLink("Client Status", "Index", "ClientStatus")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.StoreFrontId, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.StoreFront, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLink("Store Front Status", "Index", "StoreFrontStatus")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.StoreFrontConfigurationId, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.StoreFrontConfiguration, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.HostName, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.Port, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.RootPath, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.UseUrlStoreName, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.UrlStoreName, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.Order, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLink("Status", "Index", "Status")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.IsPending, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.StartDateTimeUtc, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.EndDateTimeUtc, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.CreateDateTimeUtc, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.CreatedBy, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.UpdateDateTimeUtc, "Index")
				</th>
				<th class="small">
					@Html.ActionSortLinkFor(model => model.UpdatedBy, "Index")
				</th>
				<th></th>
			</tr>

			@foreach (var item in Model)
		{
			bool clientIsActive = item.Client.IsActiveDirect();
			bool storeFrontIsActive = item.StoreFront.IsActiveDirect();
			bool bindingIsActive = item.IsActiveDirect();
			bool isAllActive = clientIsActive && storeFrontIsActive && bindingIsActive;
			string rowClass = (isAllActive ? "" : "text-warning");

				<tr class="@(rowClass)" onclick="GoToUrl('@Html.JavaScriptEncode(Url.Action("Details", new { @id = item.StoreBindingId }))');">
					<td>
						@Html.ActionLink("Details", "Details", new { id = item.StoreBindingId }, new { @class = "btn btn-sm btn-success" })
						@Html.ActionLink("Edit", "Edit", new { id = item.StoreBindingId }, new { @class = "btn btn-sm btn-warning" })
						@Html.ActionLink("Delete", "Delete", new { id = item.StoreBindingId }, new { @class = "btn btn-sm btn-danger" })
					</td>
					<td class="small">
						@Html.DisplayFor(modelItem => item.ClientId)
					</td>
					<td class="small">
						@Html.DisplayFor(modelItem => item.Client.Name)
					</td>
					<td>
						@if (clientIsActive)
					{
							<span class="text-success">Active</span>
					}
					else
					{
							<span class="text-warning"><strong>Inactive</strong></span>
							<br />
							@Html.ActionLink("Activate Client", "Activate", "ClientSysAdmin", new { id = item.ClientId }, new { @class = "btn btn-sm btn-warning" });
					}
					</td>
					<td class="small">
						@Html.DisplayFor(modelItem => item.StoreFrontId)
					</td>
					<td class="small">
						@Html.DisplayFor(modelItem => item.StoreFrontConfiguration.Name)
					</td>
					<td>
						@if (storeFrontIsActive)
					{
							<span class="text-success">Active</span>
					}
					else
					{
							<span class="text-warning"><strong>Inactive</strong></span>
							<br />
							@Html.ActionLink("Activate StoreFront", "Activate", "StoreFrontSysAdmin", new { id = item.StoreFrontId }, new { @class = "btn btn-sm btn-warning" });
					}
					</td>
					<td class="small">
						@Html.DisplayFor(modelItem => item.StoreFrontConfigurationId)
					</td>
					<td class="small">
						@Html.DisplayFor(modelItem => item.StoreFrontConfiguration)
					</td>
					<td class="small">
						@Html.DisplayFor(modelItem => item.HostName)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Port)
					</td>
					<td class="small">
						@Html.DisplayFor(modelItem => item.RootPath)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.UseUrlStoreName)
					</td>
					<td class="small">
						@Html.DisplayFor(modelItem => item.UrlStoreName)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Order)
					</td>
					<td>
						@if (bindingIsActive)
					{
							<span class="text-success">Active</span>
					}
					else
					{
							<span class="text-warning"><strong>Inactive</strong></span>
							<br />
							@Html.ActionLink("Activate Store Binding", "Activate", new { id = item.StoreBindingId }, new { @class = "btn btn-sm btn-warning" });
					}
					</td>
					<td class="small">
						@Html.DisplayFor(modelItem => item.StartDateTimeUtc)
					</td>
					<td class="small">
						@Html.DisplayFor(modelItem => item.EndDateTimeUtc)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.IsPending)
					</td>
					<td class="small">
						@Html.DisplayFor(modelItem => item.CreateDateTimeUtc)
					</td>
					<td class="small">
						@Html.DisplayFor(modelItem => item.CreatedBy.UserId)
					</td>
					<td class="small">
						@Html.DisplayFor(modelItem => item.UpdateDateTimeUtc)
					</td>
					<td class="small">
						@Html.DisplayFor(modelItem => item.UpdatedBy.UserId)
					</td>
					<td>
						@Html.ActionLink("Details", "Details", new { id = item.StoreBindingId }, new { @class = "btn btn-sm btn-success" })
						@Html.ActionLink("Edit", "Edit", new { id = item.StoreBindingId }, new { @class = "btn btn-sm btn-warning" })
						@Html.ActionLink("Delete", "Delete", new { id = item.StoreBindingId }, new { @class = "btn btn-sm btn-danger" })
					</td>
				</tr>
		}

		</table>
	</div>
}
<hr/>
@Html.ActionLink("OK", "Index", "StoreFrontSysAdmin", new { id = storeFrontId }, new { @class = "btn btn-default" })
