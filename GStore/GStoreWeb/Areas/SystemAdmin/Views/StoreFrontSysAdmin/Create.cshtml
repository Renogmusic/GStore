@model StoreFront
@{
	ViewData.SetColDisplay(0, 2, 8);
	int? themeId = null;
	bool populateProducts = true;
	bool populateDiscounts = true;
	bool populatePages = true;
	bool createDefaultConfig = true;
}
@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="row">
		<h2 class="jumbotron SysAdminCreatePageTitle col-md-offset-2 col-md-10 text-info title-align">New Store Front</h2>
	</div>
	
	<div class="row">
		<div class="form-actions col-md-offset-2 col-md-10">
			<input type="submit" value="Create" class="btn btn-info" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
		</div>
	</div>
	
	<div class="row">
		<div class="form-validation col-md-offset-2 col-md-10">
			@Html.ValidationSummary(false, "", new { @class = "text-danger" })
			@Html.HiddenAuditFields()
		</div>
	</div>

	<div class="form-horizontal">
		@Html.EditorFor(model => model.ClientId, "FieldClientId")
		@Html.EditorFor(model => model.Order, "FieldInt")
		@Html.EditorFor(model => model.IsPending, "FieldCheckbox")
		@Html.EditorFor(model => model.StartDateTimeUtc, "FieldDateTime")
		@Html.EditorFor(model => model.EndDateTimeUtc, "FieldDateTime")

		@Html.EditorFor(model => createDefaultConfig, "FieldCheckbox", new { labelText = "Create Default Configuration" })
		@Html.EditorFor(model => themeId, "FieldThemeId", new { clientId = Model.ClientId, labelText = "Theme for Configuration" })
		@Html.EditorFor(model => populateProducts, "FieldCheckbox", new { labelText = "Load Sample Products" })
		@Html.EditorFor(model => populateDiscounts, "FieldCheckbox", new { labelText = "Load Sample Discounts" })
		@Html.EditorFor(model => populatePages, "FieldCheckbox", new { labelText = "Load Simple Sample Pages" })
	</div>
	
	<div class="row">
		<div class="form-actions col-md-offset-2 col-md-10">
			<input type="submit" value="Create" class="btn btn-info" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			@Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
		</div>
	</div>
}
