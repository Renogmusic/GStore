@model CategoryEditAdminViewModel

<div class="row">
	<div class="jumbotron CatalogAdminDeletePageTitle col-md-offset-2 col-md-8 NoTopMarginOrPad NoBottomMarginOrPad">
		<h2 class="text-danger">Confirm Category Delete</h2>
	</div>
</div>

<div class="row">
	<h3 class="text-danger">Are you sure you want to delete this Category?</h3>
	<h4>@Html.DisplayFor(model => model.ProductCategory, "ProductCategoryWithProductsLink")</h4>
</div>

<div class="row">
	<div class="col-md-offset-1 col-md-8">
		@Html.DisplayFor(model => model.ProductCategory, "CategoryPath")
		@Html.DisplayFor(model => model.ProductCategory, "ChildCategoryDropdownLinks")
		<br /><br />
	</div>
</div>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	@Html.HiddenFor(model => model.ReturnToFrontEnd)
	<div class="row">
		<div class="form-actions no-color col-md-offset-2 col-md-7">
			<center>

				<input type="submit" value="Delete" class="btn btn-danger" />
				&nbsp;&nbsp;|&nbsp;&nbsp;
				@if (Model.ReturnToFrontEnd)
				{
					@Html.ActionLink("Cancel", "ViewCategoryByName", "Catalog", new { area = "", urlName = Model.UrlName }, new { @class = "btn btn-default" })
				}
				else
				{
					@Html.ActionLink("Cancel", "Manager", null, new { @class = "btn btn-default" })
				}
				&nbsp;&nbsp;|&nbsp;&nbsp;
				@Html.ActionLink("Details", "Details", new { id = Model.ProductCategoryId, ReturnToFrontEnd = Model.ReturnToFrontEnd, Tab = Model.ActiveTab }, new { id = "DetailsTop", @class = "btn btn-success" })
				&nbsp;&nbsp;|&nbsp;&nbsp;
				@Html.ActionLink("Edit", "Edit", new { id = Model.ProductCategoryId, ReturnToFrontEnd = Model.ReturnToFrontEnd, Tab = Model.ActiveTab }, new { id = "EditTop", @class = "btn btn-warning" })
			</center>
		</div>
	</div>
	
	if (Model.ProductCategory.Products.Any() || Model.ProductCategory.ProductBundles.Any() || Model.ProductCategory.CategoryAltProducts.Any() || Model.ProductCategory.CategoryAltProductBundles.Any())
	{
		@:<br />
		@:Move items to category
		List<SelectListItem> categories = Html.ProductCategoryList().Where(pc => pc.Value != Model.ProductCategoryId.ToString()).ToList();
		if (categories.Count == 0)
		{
			@:Please create another category to child products and child categories to
		}
		else
		{
			@Html.DropDownList("MoveToCategoryId", categories, null, new { required = "required" })
		}
	}
}

@{ Html.RenderPartial("_DetailsPartial"); }

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	@Html.HiddenFor(model => model.ReturnToFrontEnd)
	<div class="row">
		<div class="form-actions no-color col-md-offset-2 col-md-7">
			<center>
				<input type="submit" value="Delete" class="btn btn-danger" />
				&nbsp;&nbsp;|&nbsp;&nbsp;
				@if (Model.ReturnToFrontEnd)
				{
					@Html.ActionLink("Cancel", "ViewCategoryByName", "Catalog", new { area = "", urlName = Model.UrlName }, new { @class = "btn btn-default" })
				}
				else
				{
					@Html.ActionLink("Cancel", "Manager", null, new { @class = "btn btn-default" })
				}
				&nbsp;&nbsp;|&nbsp;&nbsp;
				@Html.ActionLink("Details", "Details", new { id = Model.ProductCategoryId, ReturnToFrontEnd = Model.ReturnToFrontEnd, Tab = Model.ActiveTab }, new { id = "DetailsBottom", @class = "btn btn-success" })
				&nbsp;&nbsp;|&nbsp;&nbsp;
				@Html.ActionLink("Edit", "Edit", new { id = Model.ProductCategoryId, ReturnToFrontEnd = Model.ReturnToFrontEnd, Tab = Model.ActiveTab }, new { id = "EditBottom", @class = "btn btn-warning" })
			</center>
		</div>
	</div>
}
