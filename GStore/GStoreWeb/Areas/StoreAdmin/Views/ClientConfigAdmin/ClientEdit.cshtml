@model ClientConfigAdminViewModel

@{
	string tabBasicActive = string.Empty;
	string tabEmailActive = string.Empty;
	string tabSmsActive = string.Empty;
	string tabAdvancedActive = string.Empty;

	switch ((Model.ActiveTab ?? string.Empty).ToLower())
	{
		case "":
		case "basic":
			tabBasicActive = "active";
			break;
		case "email":
			tabEmailActive = "active";
			break;
		case "sms":
			tabSmsActive = "active";
			break;
		case "advanced":
			tabAdvancedActive = "active";
			break;
		default:
			goto case "";
	}
}
<script>
	function JumpToViewTab() {
		var url = '@(Url.Action("ClientView", new { Tab = "XXXX"}))';
		var tabName = GetActiveTab();
		document.location = url.replace("XXXX", tabName);
	}
	function GetActiveTab() {
		if (document.getElementById('ActiveTab')) {
			return document.getElementById('ActiveTab').value
		}
		return "";
	}
	function SetActiveTab(tabName) {
		if (document.getElementById('ActiveTab')) {
			document.getElementById('ActiveTab').value = tabName;
		}
	}
</script>
@using (Html.BeginForm("ClientEdit", "ClientConfigAdmin", new { }))
{
	@Html.AntiForgeryToken()

	<div class="row">
		<h2 class="jumbotron StoreAdminEditPageTitle col-md-offset-2 col-md-7 text-warning title-align">
			<span class="text-warning">Edit Client Configuration</span>
			<br /><small>'@(Model.Name)' [@(Model.ClientId)]</small>
		</h2>
	</div>

	<div class="row">
		<div class="form-actions col-md-offset-3 col-md-9">
			<input type="submit" value="Save" class="btn btn-warning" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			<a class="btn btn-default" href="#" onclick="JumpToViewTab();">OK / Cancel</a>
		</div>
	</div>

	<div class="row">
		<div class="form-validation col-md-offset-3 col-md-9">
			@Html.ValidationSummary(false, "", new { @class = "text-danger bold" })
			@Html.HiddenFor(model => model.ClientId)
			@Html.HiddenFor(model => model.ActiveTab)
		</div>
	</div>

	<div class="form-horizontal">
		<ul class="nav nav-tabs row col-md-offset-3 col-md-9" style="width:100%">
			<li class="@(tabBasicActive)"><a data-toggle="tab" href="#sectionBasic" onclick="SetActiveTab('Basic');">Basic</a></li>
			<li class="@(tabEmailActive)"><a data-toggle="tab" href="#sectionEmail" onclick="SetActiveTab('Email');">Email</a></li>
			<li class="@(tabSmsActive)"><a data-toggle="tab" href="#sectionSms" onclick="SetActiveTab('Sms');">SMS Text</a></li>
			<li class="@(tabAdvancedActive)"><a data-toggle="tab" href="#sectionAdvanced" onclick="SetActiveTab('Advanced');">Advanced</a></li>
		</ul>

		<div class="tab-content">

			<div id="sectionBasic" class="tab-pane fade in @(tabBasicActive)">
				<div class="row">
					<h3 class="col-md-offset-3 col-md-7 bg-warning title-align">Basic Info</h3>
				</div>

				@Html.EditorFor(model => model.Name, "FieldText")
				@Html.EditorFor(model => model.TimeZoneId, "FieldTimeZone")
			</div>

			<div id="sectionEmail" class="tab-pane fade in @(tabEmailActive)">
				<div class="row">
					<h3 class="col-md-offset-3 col-md-7 bg-warning title-align">Email</h3>
				</div>
				@{
	if (GStoreData.Settings.AppEnableEmail)
	{
		<div class="row">
			<div class="col-md-offset-3 col-md-6 Border3Green">
				<h3 class="text-success">Email System is Enabled</h3>
				<p>
					Check the Use SendGrid Email box and enter your sendgrid account info to enable Email for your site.<br />
					Contact your System Administrator if you need assistance.
				</p>
			</div>
		</div>
	}
	else
	{
		<div class="row">
			<div class="col-md-offset-3 col-md-6 Border3Red">
				<h3 class="text-warning">Email System is disabled in web server settings.</h3>
				<p>
					These settings below will only take effect when Email is enabled for the web server.<br />
					Contact your System Administrator if you wish to enable Email.
				</p>
			</div>
		</div>
	}
				}

				@Html.EditorFor(model => model.UseSendGridEmail, "FieldCheckbox")
				@Html.EditorFor(model => model.SendGridMailAccount, "FieldText")
				@Html.EditorFor(model => model.SendGridMailFromEmail, "FieldText")
				@Html.EditorFor(model => model.SendGridMailFromName, "FieldText")
				@Html.EditorFor(model => model.SendGridMailPassword, "FieldText")
			</div>

			<div id="sectionSms" class="tab-pane fade in @(tabSmsActive)">
				<div class="row">
					<h3 class="col-md-offset-3 col-md-7 bg-warning title-align">SMS /Text Messages</h3>
				</div>

				@{
					if (GStoreData.Settings.AppEnableSMS)
					{
						<div class="row">
							<div class="col-md-offset-3 col-md-6 Border3Green">
								<h3 class="text-success">SMS/Text Message System is Enabled</h3>
								<p>
									Check the Use Twilio SMS Service box and enter your Twilio account info to enable SMS Text Messages for your site.<br />
									Contact your System Administrator if you need assistance.
								</p>
							</div>
						</div>
					}
					else
					{
						<div class="row">
							<div class="col-md-offset-3 col-md-6 Border3Red">
								<h3 class="text-warning">SMS/Text Message System is disabled in web server settings.</h3>
								<p>
									These settings below will only take effect when SMS/Text Messaging is enabled for the web server.<br />
									Contact your System Administrator if you wish to enable SMS/Text Messages.
								</p>
							</div>
						</div>
					}
				}

				@Html.EditorFor(model => model.UseTwilioSms, "FieldCheckbox")
				@Html.EditorFor(model => model.TwilioFromPhone, "FieldText")
				@Html.EditorFor(model => model.TwilioSid, "FieldText")
				@Html.EditorFor(model => model.TwilioSmsFromEmail, "FieldText")
				@Html.EditorFor(model => model.TwilioSmsFromName, "FieldText")
				@Html.EditorFor(model => model.TwilioToken, "FieldText")
			</div>

			<div id="sectionAdvanced" class="tab-pane fade in @(tabAdvancedActive)">
				<div class="row">
					<h3 class="col-md-offset-3 col-md-7 bg-warning title-align">Advanced Settings</h3>
				</div>

				@Html.EditorFor(model => model.EnablePageViewLog, "FieldCheckbox")
				@Html.EditorFor(model => model.EnableNewUserRegisteredBroadcast, "FieldCheckbox")

			</div>

		</div>
	</div>

	<div class="row">
		<div class="form-actions col-md-offset-3 col-md-9">
			<input type="submit" value="Save" class="btn btn-warning" />
			&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
			<a class="btn btn-default" href="#" onclick="JumpToViewTab();">OK / Cancel</a>
		</div>
	</div>

}
<hr />
<div>
	@if (Html.UserHasPermission(GStoreAction.ClientConfig_Manager))
	{
		@Html.ActionLink("Back to Configuration Manager", "Manager") @:&nbsp;|&nbsp;
	}
	@Html.ActionLink("Back to Store Admin", "Index", "StoreAdmin")
</div>
