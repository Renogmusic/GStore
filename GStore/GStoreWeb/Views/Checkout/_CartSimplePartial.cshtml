@model CheckoutViewModelBase
@{
	Cart cart = Model.Cart;
	bool showDigitalDownload = false;
	if (cart.DigitalDownloadItemCount > 0)
	{
		showDigitalDownload = true;
	}

	List<CartItem> cartItems = cart.CartItems.AsQueryable().Where(ci => !ci.CartBundleId.HasValue && !ci.ProductBundleItemId.HasValue).ApplyDefaultSort().ToList();
	List<CartBundle> cartBundles = cart.CartBundles.AsQueryable().ApplyDefaultSort().ToList();

	if (cartBundles.Count != 0 || cartItems.Count != 0)
	{
		@:<div class="table-responsive">
		@:<table class="table table-striped table-condensed">
			<tr>
				<th class="text-center">
					@Model.Config.CartItemColumnLabel.OrDefault("Item")
				</th>
				@if (Model.Config.CartItemQuantityColumnShow)
				{
					<th class="text-center">
						@Model.Config.CartItemQuantityColumnLabel.OrDefault("Quantity")
					</th>
				}
				@if (showDigitalDownload)
				{
					<th class="text-center">
						Digital Download
					</th>
				}
				@if (Model.Config.CartItemTotalColumnShow)
				{
					<th class="text-center">
						@Model.Config.CartItemTotalColumnLabel.OrDefault("Line Total")
					</th>
				}
			</tr>
	}

	if (cartBundles.Count > 0)
	{
		foreach (CartBundle bundle in cartBundles)
		{
			<tr>
				<td class="text-center">
					@Html.DisplayFor(model => bundle.ProductBundle, "CheckoutBundle")
				</td>
				@if (Model.Config.CartItemQuantityColumnShow)
				{
					<td class="text-center">@bundle.Quantity</td>
				}
				@if (showDigitalDownload)
				{
					<td class="text-center">
						&nbsp;
					</td>
				}
				@if (Model.Config.CartItemTotalColumnShow)
				{
					<td class="text-center">$@((bundle.LineTotal() ?? 0M).ToString("N2"))</td>
				}
			</tr>
			if (Model.Config.CartBundleShowIncludedItems)
			{
				foreach (CartItem item in bundle.CartItems.AsQueryable().ApplyDefaultSort())
				{
					<tr>
						<td class="text-center">
							@Html.DisplayFor(model => item.Product, "CheckoutBundleProduct")
						</td>
						@if (Model.Config.CartItemQuantityColumnShow)
						{
							<td class="text-center">@item.Quantity</td>
						}
						@if (showDigitalDownload)
						{
							<td class="text-center">
								@if (item.Product.DigitalDownload)
								{
									@:Download link will be provided at checkout
								}
								else
								{
									@:-
								}
							</td>
						}
						@if (Model.Config.CartItemTotalColumnShow)
						{
							if (Model.Config.CartBundleShowPriceOfIncludedItems)
							{
								<td class="text-center">@Html.DisplayFor(model => item.LineTotal)</td>
							}
							else
							{
								<td class="text-center">(included)</td>
							}
						}
					</tr>
				}
			}
		<tr>
			<td>&nbsp;</td>
			@if (Model.Config.CartItemQuantityColumnShow)
			{
				<td>&nbsp;</td>
			}
			@if (showDigitalDownload)
			{
				<td>&nbsp;</td>
			}
			@if (Model.Config.CartItemTotalColumnShow)
			{
				<td>&nbsp;</td>
			}
		</tr>
		}
	}

	if (cartItems.Count > 0)
	{
		foreach (CartItem item in cartItems)
		{
			<tr>
				<td class="text-center">
					@Html.DisplayFor(model => item.Product, "CheckoutProduct")
				</td>
				@if (Model.Config.CartItemQuantityColumnShow)
				{
					<td class="text-center">@item.Quantity</td>
				}
				@if (showDigitalDownload)
				{
					<td class="text-center">
						@if (item.Product.DigitalDownload)
						{
							@:Download link will be provided at checkout
					}
						else
						{
							@:-
					}
					</td>
				}
				@if (Model.Config.CartItemTotalColumnShow)
				{
					<td class="text-center">@Html.DisplayFor(model => item.LineTotal)</td>
				}
			</tr>
		}
	}
}
@if (cartBundles.Count != 0 || cartItems.Count != 0)
{
	@:</table>
	@:</div>
}
<div class="table-responsive col-lg-offset-6">
	<table class="table table-striped table-condensed">
		<tr>
			<td class="text-right-md text-right-lg">
				<strong>
					@Model.Config.CartOrderTotalLabel.OrDefault("Order Total")
				</strong>
			</td>
			<td class="title-align">
				<strong>
					@Html.DisplayFor(model => model.Cart.Total)
				</strong>
			</td>
		</tr>
	</table>
</div>

