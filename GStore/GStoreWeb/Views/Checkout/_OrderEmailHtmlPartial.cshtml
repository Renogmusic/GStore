@model Order
@{
	if (Model == null)
	{
		throw new ArgumentNullException("model (order)");
	}

	StoreFrontConfiguration config = Html.CurrentStoreFrontConfig(true);

	bool showDigitalDownloadColumn = false;
	if (Model.DigitalDownloadItemCount > 0)
	{
		showDigitalDownloadColumn = true;
	}

	List<OrderBundle> bundles = Model.OrderBundles.AsQueryable().ApplyDefaultSort().ToList();
	List<OrderItem> orderItems = Model.OrderItems.AsQueryable().Where(oi => !oi.OrderBundleId.HasValue && !oi.ProductBundleItemId.HasValue).ApplyDefaultSort().ToList();

}
<html>
<head>
<title>Your Order at @(config.Name) - @(config.PublicUrl)</title>
</head>
<body>
	<style>
		div
		{
			vertical-align: top;
		}

		.row
		{
			width: 100%;
		}

		.col-md-6
		{
			width: 50%;
		}

		.col-xs-8
		{
			display: inline-block;
			width: 66%;
		}

		.col-xs-4
		{
			display: inline-block;
			width: 33%;
		}

		.text-right
		{
			text-align: right;
		}

		.text-left
		{
			text-align: left;
		}

		.table
		{
			border: 1px solid black;
		}
	</style>

	<table>
		<tr>
			<td valign="top">
				<a href="@(config.PublicUrl)">
					<img src="@Url.GStoreLocalUrl("/Images/Logo/Logo.png", true)" alt="@(config.Name) Logo" title="@(config.Name) Logo" />
				</a>
			</td>
			<td valign="top">
				<a href="@(config.PublicUrl)">
					@(config.Name)<br />@(config.PublicUrl)
				</a>
			</td>
		</tr>
		<tr>
			<td colspan="2">
				<h1>Your Order at @(config.Name)</h1>
			</td>
		</tr>
	</table>

	<table>
		<tr>
			<td valign="top" align="right">
				Order Number
			</td>
			<td valign="top" align="left">
				@Html.DisplayFor(model => model.OrderNumber)
			</td>
		</tr>

		<tr>
			<td valign="top" align="right">
				Placed On
			</td>
			<td valign="top" align="left">
				@Html.DisplayFor(model => model.CreateDateTimeUtc)
			</td>
		</tr>

		<tr>
			<td valign="top" align="right">
				Order Status Link
			</td>
			<td valign="top" align="left">
				<a href="@Url.Action("View", "OrderStatus", new { id = Model.OrderNumber, email = Model.Email}, "http")">Order Status</a>
			</td>
		</tr>

		<tr>
			<td valign="top" align="right">
				Updated On
			</td>
			<td valign="top" align="left">
				@Html.DisplayFor(model => model.UpdateDateTimeUtc)
			</td>
		</tr>

		@if (Model.DigitalDownloadItemCount > 0)
		{
			<tr>
				<td valign="top" align="right">
					Digital Download
				</td>
				<td valign="top" align="left">
					@(Model.DigitalDownloadItemCount) item@(Model.DigitalDownloadItemCount == 1 ? "" : "s")
					<br />@(Model.OrderItems.Count(oi => oi.StatusItemDownloaded)) downloaded -
					@(Model.OrderItems.Count(oi => !oi.StatusItemDownloaded)) awaiting download
				</td>
			</tr>
		}
		@if (Model.ShippingItemCount > 0)
		{
			<tr>
				<td valign="top" align="right">
					Shipping
				</td>
				<td valign="top" align="left">
					@(Model.ShippingItemCount) item@(Model.ShippingItemCount == 1 ? "" : "s")
					<br />@(Model.OrderItems.Count(oi => oi.StatusItemShipped)) shipped -
					@(Model.OrderItems.Count(oi => !oi.StatusItemDownloaded)) awaiting shipment
				</td>
			</tr>
		}
		@if (Model.DeliveryInfoDigital != null)
		{
			<tr>
				<td colspan="2">
					@Html.DisplayFor(model => model.DeliveryInfoDigital, "DeliveryInfoDigitalForEmail")
				</td>
			</tr>
		}
		@if (Model.DeliveryInfoShipping != null)
		{
			<tr>
				<td colspan="2">
					@Html.DisplayFor(model => model.DeliveryInfoShipping, "DeliveryInfoShippingForEmail")
				</td>
			</tr>
		}

	</table>
	
	@if (Model.OrderItems.Count > 0)
	{
	<table class="table table-striped table-condensed" border="1" cellpadding="6" cellspacing="0">
		<tr>
			<th class="text-center">
				@config.CartItemColumnLabel.OrDefault("Item")
			</th>
			<th class="text-center">
				Status
			</th>
			<th class="text-right">
				@config.CartItemQuantityColumnLabel.OrDefault("Quantity")
			</th>
			@if (config.CartItemTotalColumnShow)
			{
				<th class="text-right">
					@config.CartItemTotalColumnLabel.OrDefault("Total")
				</th>
			}
			@if (showDigitalDownloadColumn)
			{
				<th class="text-center">
					Digital Download
				</th>
			}
		</tr>
		@{
			foreach (OrderBundle bundle in bundles)
			{
				<tr>
					<td class="text-center">
						@bundle.ProductBundle.Name
					</td>
					<td class="text-center">
						&nbsp;
					</td>
					<td class="text-right">
						@bundle.Quantity
					</td>
					@if (config.CartItemTotalColumnShow)
					{
						<td class="text-right">$@((bundle.LineTotal() ?? 0M).ToString("N2"))</td>
					}
					@if (showDigitalDownloadColumn)
					{
						<td class="text-center">
							&nbsp;
						</td>
					}
				</tr>

				if (config.CartBundleShowIncludedItems)
				{
					foreach (OrderItem item in bundle.OrderItems.AsQueryable().ApplyDefaultSort())
					{
						<tr>
							<td class="text-center">
								includes - @item.Product.Name
							</td>
							<td class="text-center">
								@item.StatusTextString()
							</td>
							<td class="text-right">
								@item.Quantity
							</td>
							@if (config.CartItemTotalColumnShow)
							{
								if (config.CartBundleShowPriceOfIncludedItems)
								{
									<td class="text-right">$@(item.LineTotal.ToString("N2"))</td>
								}
								else
								{
									<td class="text-right">(included)</td>
								}
							}
							@if (showDigitalDownloadColumn)
							{
								<td class="text-center">
									@if (!item.Product.DigitalDownload)
									{
										//item is not a digital download
										@:-
								}
									else if (item.Product.DigitalDownload)
									{
										//digital download; is it paid?
										if (item.StatusItemPaymentReceived)
										{
											//item is paid, allow download
											@Html.ActionLink("Click HERE to Download", "Download", new { id = Model.OrderNumber, email = Model.Email, orderItemId = item.OrderItemId }, null)
										}
										else
										{
											//item is not paid, show note
											@:Your download will be available after your payment is processed
									}
									}
								</td>
							}
						</tr>
					}
				}
				<tr>
					<td colspan="3">&nbsp;</td>
						@if (config.CartItemTotalColumnShow)
						{
							<td>&nbsp;</td>
						}
						@if (showDigitalDownloadColumn)
						{
							<td>&nbsp;</td>
						}
				</tr>
			}
		}
		@{
			foreach (OrderItem item in orderItems)
			{
				<tr>
					<td class="text-center">
						@item.Product.Name
					</td>
					<td class="text-center">
						@item.StatusTextString()
					</td>
					<td class="text-right">
						@item.Quantity
					</td>
					@if (config.CartItemTotalColumnShow)
					{
						<td class="text-right">$@(item.LineTotal.ToString("N2"))</td>
					}
					@if (showDigitalDownloadColumn)
					{
						<td class="text-center">
							@if (!item.Product.DigitalDownload)
							{
								//item is not a digital download
								@:-
						}
							else if (item.Product.DigitalDownload)
							{
								//digital download; is it paid?
								if (item.StatusItemPaymentReceived)
								{
									//item is paid, allow download
									@Html.ActionLink("Click HERE to Download", "Download", new { id = Model.OrderNumber, email = Model.Email, orderItemId = item.OrderItemId }, null)
								}
								else
								{
									//item is not paid, show note
									@:Your download will be available after your payment is processed
							}
							}
						</td>
					}
				</tr>
			}
		}
	</table>
	}
	<hr />
	<table class="table" border="1" cellpadding="8" cellspacing="0">
		@if (config.CartOrderItemCountShow)
		{
			<tr>
				<td class="text-right">
					<strong>
						@config.CartOrderItemCountLabel.OrDefault("Order Item Count")
					</strong>
				</td>
				<td class="title-align">
					<strong>
						@Html.DisplayFor(model => model.ItemCount)
					</strong>
				</td>
			</tr>
		}
		@if (config.CartOrderDiscountCodeSectionShow)
		{
			<tr>
				<td class="text-right">
					<strong>
						@config.CartOrderDiscountCodeLabel.OrDefault("Discount Code")
					</strong>
				</td>
				<td class="title-align">
					<strong>
						@(Model.DiscountCode.OrDefault("(none)"))
					</strong>
				</td>
			</tr>
		}
		@if (config.CartOrderSubtotalShow)
		{
			<tr>
				<td class="text-right">
					<strong>
						@config.CartOrderSubtotalLabel.OrDefault("Sub-Total")
					</strong>
				</td>
				<td class="text-right">
					<strong>
						@Html.DisplayFor(model => model.Subtotal)
					</strong>
				</td>
			</tr>
		}
		@if (config.CartOrderTaxShow)
		{
			<tr>
				<td class="text-right">
					<strong>
						@config.CartOrderTaxLabel.OrDefault("Tax")
					</strong>
				</td>
				<td class="text-right">
					<strong>
						@Html.DisplayFor(model => model.Tax, "CurrencyOrZero")
					</strong>
				</td>
			</tr>
		}
		@if (config.CartOrderShippingShow)
		{
			<tr>
				<td class="text-right">
					<strong>
						@config.CartOrderShippingLabel.OrDefault("Shipping")
					</strong>
				</td>
				<td class="text-right">
					<strong>
						@Html.DisplayFor(model => model.Shipping)
					</strong>
				</td>
			</tr>
		}
		@if (config.CartOrderHandlingShow)
		{
			<tr>
				<td class="text-right">
					<strong>
						@config.CartOrderHandlingLabel.OrDefault("Handling")
					</strong>
				</td>
				<td class="text-right">
					<strong>
						@Html.DisplayFor(model => model.Handling)
					</strong>
				</td>
			</tr>
		}
		@if (config.CartOrderDiscountShow)
		{
			<tr>
				<td class="text-right">
					<strong>
						@config.CartOrderDiscountLabel.OrDefault("Order Discount")
					</strong>
				</td>
				<td class="text-right">
					<strong>
						@Html.DisplayFor(model => model.OrderDiscount, "CurrencyOrZero")
					</strong>
				</td>
			</tr>
		}
		<tr>
			<td class="text-right">
				<strong>
					@config.CartOrderTotalLabel.OrDefault("Order Total")
				</strong>
			</td>
			<td class="text-right">
				<strong>
					@Html.DisplayFor(model => model.Total)
				</strong>
			</td>
		</tr>
	</table>
</body>
</html>
