@model CatalogViewModel
<!-- View Product Start -->
@{
	if (Model.CurrentProductOrNull == null)
	{
		throw new ApplicationException("Model.CurrentProductOrNull is null, set in controller for this page");
	}

	Product product = Model.CurrentProductOrNull;
	ViewBag.Title = product.Name + " - " + product.Category.Name;
	UserProfile profile = Html.CurrentUserProfile(false);
	bool userCanEditProduct = false;
	if (profile != null && Model.StoreFront.Authorization_IsAuthorized(profile, GStoreAction.Products_Edit))
	{
		userCanEditProduct = true;
	}

}

<div class="row CatalogTitleRow">
	<div class="col-xs-12 text-center CatalogTitleCol">
		<h1 class="CatalogTitleText">@(Model.StoreFrontConfig.CatalogTitle)</h1>
	</div>
</div>

<div class="row CategoryPathRow">
	<div class="CategoryPath col-xs-12 text-center">
		@Html.ProductCategoryWithParentLinks(product.Category, "Top", true) &gt; @product.Name
	</div>
</div>

<div class="CatalogHeader">
	@Html.Raw(Html.ReplaceVariables(Model.StoreFrontConfig.CatalogHeaderHtml))
</div>

@{ Html.RenderCatalogProductDetailsPartial();}

<div class="CatalogFooter">
	@Html.Raw(Html.ReplaceVariables(Model.StoreFrontConfig.CatalogFooterHtml))
</div>

@if (userCanEditProduct)
{
	StoreFrontConfiguration config = Model.StoreFrontConfig;
	ProductCategory category = product.Category;
	string productSingle = category.ProductTypeSingleOrSystemDefault(config);
	string productsPlural = category.ProductTypePluralOrSystemDefault(config);
	string bundleSingle = category.BundleTypeSingleOrSystemDefault(config);
	string bundlesPlural = category.BundleTypePluralOrSystemDefault(config);
	<hr />
	@Html.ActionLink("View " + productSingle, "Details", "ProductAdmin", new { area = "CatalogAdmin", id = product.ProductId, ReturnToFrontEnd = true }, null)
	@:&nbsp;&nbsp;|&nbsp;&nbsp;
	@Html.ActionLink("Edit " + productSingle, "Edit", "ProductAdmin", new { area = "CatalogAdmin", id = product.ProductId, ReturnToFrontEnd = true }, null)
	@:&nbsp;&nbsp;|&nbsp;&nbsp;
	@Html.ActionLink("View Category", "Details", "CategoryAdmin", new { area = "CatalogAdmin", id = category.ProductCategoryId, ReturnToFrontEnd = true }, null)
	@:&nbsp;&nbsp;|&nbsp;&nbsp;
	@Html.ActionLink("Edit Category", "Edit", "CategoryAdmin", new { area = "CatalogAdmin", id = category.ProductCategoryId, ReturnToFrontEnd = true }, null)
	@:&nbsp;&nbsp;|&nbsp;&nbsp;
	@Html.ActionLink("View Category " + productsPlural, "Manager", "ProductAdmin", new { area = "CatalogAdmin", productCategoryId = category.ProductCategoryId, ReturnToFrontEnd = true }, null)
	@:&nbsp;&nbsp;|&nbsp;&nbsp;
	@Html.ActionLink("View Category " + bundlesPlural, "Manager", "BundleAdmin", new { area = "CatalogAdmin", productCategoryId = category.ProductCategoryId, ReturnToFrontEnd = true }, null)
	@:&nbsp;&nbsp;|&nbsp;&nbsp;
	@Html.ActionLink("New Category " + productSingle, "Create", "ProductAdmin", new { area = "CatalogAdmin", id = category.ProductCategoryId, ReturnToFrontEnd = true }, null)
	@:&nbsp;&nbsp;|&nbsp;&nbsp;
	@Html.ActionLink("New Category " + bundleSingle, "Create", "BundleAdmin", new { area = "CatalogAdmin", id = category.ProductCategoryId, ReturnToFrontEnd = true }, null)

}
<!-- View Product End -->
