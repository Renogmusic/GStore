@model MenuViewModel
<!-- NavBar Catalog Menu-->
@{
	bool isRegistered = User.IsRegistered();
	int navBarCatalogMaxLevels = 6;
	if (Model.StoreFront != null)
	{
		navBarCatalogMaxLevels = Model.StoreFrontConfig.NavBarCatalogMaxLevels;
	}

	if (navBarCatalogMaxLevels > 6)
	{
		//this code item only iterates up to 6 levels
		navBarCatalogMaxLevels = 6;
	}
	if (navBarCatalogMaxLevels > 0)
	{
		foreach (TreeNode<ProductCategory> level1Category in Model.CategoryTree)
		{
			//Level 1 (root)
			bool level1HasChildMenuItems  = level1Category.HasChildMenuItems(navBarCatalogMaxLevels);
			bool level1HasChildProductsToList = level1Category.HasChildProductsToList(isRegistered);
			@Html.CatalogMenuItemStart(level1Category, 1, navBarCatalogMaxLevels, isRegistered)
			if (level1HasChildMenuItems || level1HasChildProductsToList)
			{
				@Html.CatalogMenuChildContainerStart(level1Category, 1, navBarCatalogMaxLevels)
				@Html.CatalogMenuItemAllLink(level1Category, 1, navBarCatalogMaxLevels, isRegistered)
				@Html.CatalogMenuChildProductList(level1Category, 1, navBarCatalogMaxLevels, isRegistered)
				foreach (TreeNode<ProductCategory> level2Category in level1Category.ChildNodes)
				{
					//Level 2
					bool level2HasChildMenuItems = level2Category.HasChildMenuItems(navBarCatalogMaxLevels);
					bool level2HasChildProductsToList = level2Category.HasChildProductsToList(isRegistered);
					@Html.CatalogMenuItemStart(level2Category, 2, navBarCatalogMaxLevels, isRegistered)
					if (level2HasChildMenuItems || level2HasChildProductsToList) 
					{
						@Html.CatalogMenuChildContainerStart(level2Category, 2, navBarCatalogMaxLevels)
						@Html.CatalogMenuChildProductList(level2Category, 2, navBarCatalogMaxLevels, isRegistered)
						foreach (TreeNode<ProductCategory> level3Category in level2Category.ChildNodes)
						{
							//Level 3
							bool level3HasChildMenuItems = level3Category.HasChildMenuItems(navBarCatalogMaxLevels);
							bool level3HasChildProductsToList = level3Category.HasChildProductsToList(isRegistered);
							@Html.CatalogMenuItemStart(level3Category, 3, navBarCatalogMaxLevels, isRegistered)
							if (level3HasChildMenuItems || level3HasChildProductsToList)
							{
								@Html.CatalogMenuChildContainerStart(level3Category, 3, navBarCatalogMaxLevels)
								@Html.CatalogMenuChildProductList(level3Category, 3, navBarCatalogMaxLevels, isRegistered)
								foreach (TreeNode<ProductCategory> level4Category in level3Category.ChildNodes)
								{
									//Level 4
									bool level4HasChildMenuItems = level4Category.HasChildMenuItems(navBarCatalogMaxLevels);
									bool level4HasChildProductsToList = level4Category.HasChildProductsToList(isRegistered);
									@Html.CatalogMenuItemStart(level4Category, 4, navBarCatalogMaxLevels, isRegistered)
									if (level4HasChildMenuItems || level4HasChildProductsToList)
									{
										@Html.CatalogMenuChildContainerStart(level4Category, 4, navBarCatalogMaxLevels)
										@Html.CatalogMenuChildProductList(level4Category, 4, navBarCatalogMaxLevels, isRegistered)
										foreach (TreeNode<ProductCategory> level5Category in level4Category.ChildNodes)
										{
											//Level 5
											bool level5HasChildMenuItems = level5Category.HasChildMenuItems(navBarCatalogMaxLevels);
											bool level5HasChildProductsToList = level5Category.HasChildProductsToList(isRegistered);
											@Html.CatalogMenuItemStart(level5Category, 5, navBarCatalogMaxLevels, isRegistered)
											if (level5HasChildMenuItems || level5HasChildProductsToList)
											{
												@Html.CatalogMenuChildContainerStart(level5Category, 5, navBarCatalogMaxLevels)
												@Html.CatalogMenuChildProductList(level5Category, 5, navBarCatalogMaxLevels, isRegistered)
												foreach (TreeNode<ProductCategory> level6Category in level5Category.ChildNodes)
												{
													//Level 6
													bool level6HasChildProductsToList = level6Category.HasChildProductsToList(isRegistered);
													@Html.CatalogMenuItemStart(level6Category, 6, navBarCatalogMaxLevels, isRegistered)
													if (level6HasChildProductsToList)
													{
														@Html.CatalogMenuChildContainerStart(level6Category, 6, navBarCatalogMaxLevels)
														@Html.CatalogMenuChildProductList(level6Category, 6, navBarCatalogMaxLevels, isRegistered)
														@Html.CatalogMenuChildContainerEnd(level6Category, 6, navBarCatalogMaxLevels)
													}
													@Html.CatalogMenuItemEnd(level6Category, 6, navBarCatalogMaxLevels)
												}
												@Html.CatalogMenuChildContainerEnd(level1Category, 5, navBarCatalogMaxLevels)
											}
											@Html.CatalogMenuItemEnd(level5Category, 5, navBarCatalogMaxLevels)
										}
										@Html.CatalogMenuChildContainerEnd(level4Category, 4, navBarCatalogMaxLevels)
									}
									@Html.CatalogMenuItemEnd(level4Category, 4, navBarCatalogMaxLevels)
								}
								@Html.CatalogMenuChildContainerEnd(level3Category, 3, navBarCatalogMaxLevels)
							}
							@Html.CatalogMenuItemEnd(level3Category, 3, navBarCatalogMaxLevels)
						}
						@Html.CatalogMenuChildContainerEnd(level2Category, 2, navBarCatalogMaxLevels)
					}
					@Html.CatalogMenuItemEnd(level2Category, 2, navBarCatalogMaxLevels)
				}
				@Html.CatalogMenuChildContainerEnd(level1Category, 1, navBarCatalogMaxLevels)
			}
			@Html.CatalogMenuItemEnd(level1Category, 1, navBarCatalogMaxLevels)
		}
	}
}
