@model string
@{
	int colLabel = ViewData.ColLabel();
	int colData = ViewData.ColData();
	int colOffset = ViewData.ColOffset();
	bool useHelpLabelPopover = ViewData.UseHelpLabelPopover();
	bool useHelpLabelText = ViewData.UseHelpLabelText();
	
	//if CKEditor is not in ViewData, add script for it and set viewdata flag
	bool hasCkEditor = (ViewData["CKEditor"] as bool?) ?? false;
	{
		if (!hasCkEditor)
		{
			<script src="~/Scripts/CKEditor/ckeditor.js"></script>
			ViewData["CKEditor"] = true;
		}
	}
	
	string fieldId = ViewData.TemplateInfo.GetFullHtmlFieldId("");
}
<div class="form-group">
	@Html.LabelWithRequiredForModel(new { @class = (colOffset == 0 ? "" : "col-md-offset-" + colOffset + " ") + "col-md-" + colLabel + " title-align-right" })
	<div class="col-md-@(colData) title-align">
		@Html.TextAreaWithWatermarkForModel()
		@if (useHelpLabelPopover)
		{
			@Html.HelpLabelPopoverForModel()
		}
		@Html.ValidationMessageForModel()
		@if (useHelpLabelText)
		{
			<br />@Html.HelpLabelForModel()
		}
		<script>$(document).ready(function () { CKEDITOR.replace('@(fieldId.ToJavaScriptMvcString())'); });</script>
	</div>
</div>
