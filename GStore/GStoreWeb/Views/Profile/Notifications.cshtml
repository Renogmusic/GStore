@model NotificationSettingsViewModel
@{
	ViewBag.Title = "Notification Settings";
}
<div class="row">

	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()

		<div class="col-sm-3 hidden-xs"></div>
		<div class="form-horizontal center-block BorderCell col-sm-6" style="padding-left: 2em">
			<h2>Notification Settings</h2>
			Email Address: @Model.UserProfile.Email
			@if (Model.UserProfile.AspNetIdentityUser().EmailConfirmed)
			{
				@:&nbsp;&nbsp;&nbsp;&nbsp;<span class="text-info">[Verified]</span>
			}
			else
			{
				@:&nbsp;&nbsp;&nbsp;&nbsp;<span class="text-danger">[Not Verified. No Email notifications will be sent.]</span>
				@:<br />&nbsp;&nbsp; [@Html.ActionLink("Click here to Verify Your Email Address", "ConfirmEmail", null, new { @class = "" })]
			}
			<br/>
			Phone: @(Model.UserProfile.AspNetIdentityUser().PhoneNumber ?? "None") [
			@if (!string.IsNullOrEmpty(Model.UserProfile.AspNetIdentityUser().PhoneNumber))
			{
				@Html.ActionLink("Change", "AddPhoneNumber")
				@: &nbsp;|&nbsp;
				@Html.ActionLink("Remove", "RemovePhoneNumber")
			}
			else
			{
				@Html.ActionLink("Add", "AddPhoneNumber")
			}
			]



			@Html.ValidationSummary(true, "", new { @class = "text-danger" })

			<div class="form-group">
				@Html.EditorFor(model => model.AllowUsersToSendSiteMessages)
				@Html.LabelFor(model => model.AllowUsersToSendSiteMessages, htmlAttributes: new { @class = "control-label" })
				@Html.ValidationMessageFor(model => model.AllowUsersToSendSiteMessages, "", new { @class = "text-danger" })
			</div>

			<div class="form-group">
				@Html.EditorFor(model => model.NotifyAllWhenLoggedOn)
				@Html.LabelFor(model => model.NotifyAllWhenLoggedOn, htmlAttributes: new { @class = "control-label" })
				@Html.ValidationMessageFor(model => model.NotifyAllWhenLoggedOn, "", new { @class = "text-danger" })
			</div>

			<div class="form-group">
				@Html.EditorFor(model => model.NotifyOfSiteUpdatesToEmail)
				@Html.LabelFor(model => model.NotifyOfSiteUpdatesToEmail, htmlAttributes: new { @class = "control-label" })
				@Html.ValidationMessageFor(model => model.NotifyOfSiteUpdatesToEmail, "", new { @class = "text-danger" })
			</div>

			<div class="form-group">
				@Html.EditorFor(model => model.SubscribeToNewsletterEmail)
				@Html.LabelFor(model => model.SubscribeToNewsletterEmail, htmlAttributes: new { @class = "control-label" })
				@Html.ValidationMessageFor(model => model.SubscribeToNewsletterEmail, "", new { @class = "text-danger" })
			</div>

			<div class="form-group">
				@Html.EditorFor(model => model.SendSiteMessagesToEmail)
				@Html.LabelFor(model => model.SendSiteMessagesToEmail, htmlAttributes: new { @class = "control-label" })
				(requires validated email address)
				@Html.ValidationMessageFor(model => model.SendSiteMessagesToEmail, "", new { @class = "text-danger" })
			</div>

			<div class="form-group">
				@Html.EditorFor(model => model.SendSiteMessagesToSms)
				@Html.LabelFor(model => model.SendSiteMessagesToSms, htmlAttributes: new { @class = "control-label" })
				(requires validated phone number)
				@Html.ValidationMessageFor(model => model.SendSiteMessagesToSms, "", new { @class = "text-danger" })
			</div>

			<div class="form-group">
				<input type="submit" value="Save" class="btn btn-primary" />
				&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;
				@Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-warning" })
			</div>
		</div>
	}
	<div class="col-sm-3 hidden-xs"></div>
</div>
<div class="row">
	<div class="col text-center">
		@Html.ActionLink("Back to My Profile", "Index")
	</div>
</div>
