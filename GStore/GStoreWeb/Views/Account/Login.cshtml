@model LoginViewModel
@{
	StoreFrontConfiguration storeFrontConfig = Html.CurrentStoreFrontConfig(false);
	if (storeFrontConfig == null)
	{
		ViewBag.Title = "Log in to GStore";
	}
	else
	{
		ViewBag.Title = "Log in to " + storeFrontConfig.Name;
	}
	bool checkingOut = Model.CheckingOut ?? false;
	object routeValues = null;
	if (checkingOut)
	{
		routeValues = new { CheckingOut = checkingOut };
	}

	ViewData.SetColDisplay(0, 2, 9);

	ViewData.FocusId("Email");
}

<div class="row">
	<h2 class="AccountTitle jumbotron col-md-offset-2 col-md-7 title-align bg-primary">@ViewBag.Title</h2>
</div>

@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
	@Html.AntiForgeryToken()
	@Html.HiddenFor(model => model.CheckingOut)
	<div class="row">
		<div class="form-validation col-md-offset-2 col-md-8">
			@Html.ValidationSummary(false, "", new { @class = "text-danger" })
		</div>
	</div>
	
	if (checkingOut)
	{
		<div class="row">
			<div class="form-group col-xs-12">
				@Html.ActionLink("Return to Checkout as a Guest", "LoginOrGuest", "Checkout", new { ContinueAsGuest = true}, new { @class = "btn btn-info" })
			</div>
		</div>
	}

	<div class="form-horizontal">

		@Html.EditorFor(model => model.Email, "FieldEmail")
		@Html.EditorFor(model => model.Password, "FieldPassword")
		@Html.EditorFor(model => model.RememberMe, "FieldCheckbox")
	</div>

	<hr />
	
	<div class="form-actions row">
		<div class="col-md-offset-2 col-md-6">
			<input type="submit" value="Log in" class="btn btn-primary" />
			@{
				string linkText = string.Empty;
				if (storeFrontConfig != null && !string.IsNullOrEmpty(storeFrontConfig.NavBarRegisterLinkText))
				{
					linkText = storeFrontConfig.AccountLoginRegisterLinkText;
				}
				else
				{
					linkText = "Sign-Up as a new user";
				}

				if (storeFrontConfig != null && storeFrontConfig.AccountLoginShowRegisterLink)
				{
					@:&nbsp;&nbsp;|&nbsp;&nbsp;
					@Html.ActionLink(linkText, "Register", routeValues, new { @class = "btn btn-warning" })
				}
				<span class="hidden-xs hidden-sm">&nbsp;&nbsp;|&nbsp;&nbsp;</span>
				<div class="row hidden-md hidden-lg">&nbsp;</div>
				@Html.ActionLink("Forgot your password?", "ForgotPassword", routeValues, new { @class="btn btn-danger" } )
			}
		</div>
	</div>
}


@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}