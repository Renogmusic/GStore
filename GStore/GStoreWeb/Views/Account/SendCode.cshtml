@model SendCodeViewModel
@{
	ViewBag.Title = "Send";
	bool checkingOut = Model.CheckingOut ?? false;
	object routeValues = null;
	if (checkingOut)
	{
		routeValues = new { CheckingOut = checkingOut };
	}
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("SendCode", "Account", new { ReturnUrl = Model.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
	@Html.AntiForgeryToken()
	@Html.Hidden("rememberMe", @Model.RememberMe)
	@Html.HiddenFor(model => model.CheckingOut)

	<h4>Send verification code</h4>
	<hr />
	if (checkingOut)
	{
		<div class="row">
			<div class="form-group col-xs-12">
				@Html.ActionLink("Return to Checkout as a Guest", "LoginOrGuest", "Checkout", new { ContinueAsGuest = true }, new { @class = "btn btn-info" })
			</div>
		</div>
	}
	<div class="row">
		<div class="col-md-8">
			Select Two-Factor Authentication Provider:
			@Html.DropDownListFor(model => model.SelectedProvider, Model.Providers)
			<input type="submit" value="Submit" class="btn btn-primary" />
		</div>
	</div>
}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
