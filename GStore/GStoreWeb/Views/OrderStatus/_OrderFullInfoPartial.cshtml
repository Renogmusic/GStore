@model Order
@{
	StoreFrontConfiguration config = Html.CurrentStoreFrontConfig(true);
	
	bool showDigitalDownloadColumn = false;
	if (Model.DigitalDownloadItemCount > 0)
	{
		showDigitalDownloadColumn = true;
	}

	List<OrderBundle> bundles = Model.OrderBundles.AsQueryable().ApplyDefaultSort().ToList();
	List<OrderItem> orderItems = Model.OrderItems.AsQueryable().Where(oi => !oi.OrderBundleId.HasValue && !oi.ProductBundleItemId.HasValue).ApplyDefaultSort().ToList();
	
	<div class="row">
		<div class="col-sm-12 col-md-6">
			<div class="row">
				<div class="col-xs-4 text-right">
					Order Number
				</div>
				<div class="col-xs-8 text-left">
					@Html.DisplayFor(model => model.OrderNumber)
				</div>
			</div>
			<div class="row">
				<div class="col-xs-4 text-right">
					Placed On
				</div>
				<div class="col-xs-8 text-left">
					@Html.DisplayFor(model => model.CreateDateTimeUtc)
				</div>
			</div>
			<div class="row">
				<div class="col-xs-4 text-right">
					Updated On
				</div>
				<div class="col-xs-8 text-left">
					@Html.DisplayFor(model => model.UpdateDateTimeUtc)
				</div>
			</div>
			@if (Model.DigitalDownloadItemCount > 0)
			{
			<div class="row">
				<div class="col-xs-4 text-right">
					Digital Download
				</div>
				<div class="col-xs-8 text-left">
					@(Model.DigitalDownloadItemCount) item@(Model.DigitalDownloadItemCount == 1 ? "" : "s")
					<br />@(Model.OrderItems.Count(oi => oi.StatusItemDownloaded)) downloaded -
					@(Model.OrderItems.Count(oi => !oi.StatusItemDownloaded)) awaiting download<br />

				</div>
			</div>
			}
			@if (Model.ShippingItemCount > 0)
			{
			<div class="row">
				<div class="col-xs-4 text-right">
					Shipping
				</div>
				<div class="col-xs-8 text-left">
					@(Model.ShippingItemCount) item@(Model.ShippingItemCount == 1 ? "" : "s")
					<br />@(Model.OrderItems.Count(oi => oi.StatusItemShipped)) shipped -
					@(Model.OrderItems.Count(oi => !oi.StatusItemDownloaded)) awaiting shipment<br />
				</div>
			</div>
			}
		</div>
		<div class="col-sm-12 col-md-6">
			<div class="row">
				@if (Model.DeliveryInfoDigital != null)
				{
					@Html.DisplayFor(model => model.DeliveryInfoDigital)
				}
				@if (Model.DeliveryInfoShipping != null)
				{
					@Html.DisplayFor(model => model.DeliveryInfoShipping)
				}
			</div>
		</div>
	</div>
	
	if (Model.OrderItems.Count > 0)
	{
		<div class="table-responsive">
			<table class="table table-striped  table-condensed">
				<tr>
					<th class="text-center">
						Status
					</th>
					<th class="text-center">
						@config.CartItemColumnLabel.OrDefault("Item")
					</th>
					@if (config.CartItemQuantityColumnShow)
					{
						<th class="text-center">
							@config.CartItemQuantityColumnLabel.OrDefault("Quantity")
						</th>
					}
					@if (config.CartItemTotalColumnShow)
					{
						<th class="text-center">
							@config.CartItemTotalColumnLabel.OrDefault("Total")
						</th>
					}
					@if (showDigitalDownloadColumn)
					{
						<th class="text-center">
							Digital Download
						</th>
					}
				</tr>
		@{
		foreach (OrderBundle bundle in bundles)
		{
			<tr>
				<td class="text-center">@(bundle.ProductBundle.Name)</td>
				<td class="text-center">
					&nbsp;
				</td>
				@if (config.CartItemQuantityColumnShow)
				{
					<td class="text-center">@bundle.Quantity</td>
				}
				@if (config.CartItemTotalColumnShow)
				{
					<td class="text-center">$@((bundle.LineTotal() ?? 0M).ToString("N2"))</td>
				}
				@if (showDigitalDownloadColumn)
				{
					<td class="text-center">&nbsp;</td>
				}
			</tr>

			if (config.CartBundleShowIncludedItems)
			{
				foreach (OrderItem bundleItem in bundle.OrderItems)
				{
					<tr>
						<td class="text-center">includes - @(bundleItem.Product.Name)</td>
						<td class="text-center">
							@bundleItem.StatusTextString()
						</td>
						@if (config.CartItemQuantityColumnShow)
						{
							<td class="text-center">@bundleItem.Quantity</td>
						}
						@if (config.CartItemTotalColumnShow)
						{
							if (config.CartBundleShowPriceOfIncludedItems)
							{
								<td class="text-center">$@(bundleItem.LineTotal.ToString("N2"))</td>
							}
							else
							{
								<td class="text-center">(included)</td>
							}
						}
						@if (showDigitalDownloadColumn)
						{
							<td class="text-center">
								@if (!bundleItem.Product.DigitalDownload)
								{
									//item is not a digital download
									@:-
							}
								else if (bundleItem.Product.DigitalDownload)
								{
									//digital download; is it paid?
									if (bundleItem.StatusItemPaymentReceived)
									{
										//item is paid, allow download
										@Html.ActionLink("Click HERE to Download", "Download", new { id = Model.OrderNumber, email = Model.Email, orderItemId = bundleItem.OrderItemId }, null)
									}
									else
									{
										//item is not paid, show note
										@:Your download will be available after your payment is processed
								}
								}
							</td>
						}
					</tr>

				}
			}

		}

			<tr>
				<td colspan="2">&nbsp;</td>
				@if (config.CartItemQuantityColumnShow)
				{
					<td>&nbsp;</td>
				}
				@if (config.CartItemTotalColumnShow)
				{
					<td>&nbsp;</td>
				}
				@if (showDigitalDownloadColumn)
				{
					<td>&nbsp;</td>
				}

			</tr>
		}


				@{
		foreach (OrderItem item in orderItems)
		{
			<tr>
				<td class="text-center">
					@item.StatusTextString()
				</td>
				<td class="text-center">@item.Product.Name</td>
				@if (config.CartItemQuantityColumnShow)
				{
					<td class="text-center">@item.Quantity</td>
				}
				@if (config.CartItemTotalColumnShow)
				{
					<td class="text-center">@item.LineTotal</td>
				}
				@if (showDigitalDownloadColumn)
				{
					<td class="text-center">
						@if (!item.Product.DigitalDownload)
						{
							//item is not a digital download
							@:-
						}
						else if (item.Product.DigitalDownload)
						{
							//digital download; is it paid?
							if (item.StatusItemPaymentReceived)
							{
								//item is paid, allow download
								@Html.ActionLink("Click HERE to Download", "Download", new { id = Model.OrderNumber, email = Model.Email, orderItemId = item.OrderItemId }, null)
							}
							else
							{
								//item is not paid, show note
								@:Your download will be available after your payment is processed
							}
						}
					</td>
				}
			</tr>
		}
				}
			</table>

		</div>
	}
}

<div class="col-lg-offset-8 table-responsive">
	<table class="table table-striped table-condensed">
		@if (config.CartOrderItemCountShow)
		{
			<tr>
				<td class="text-right-md text-right-lg">
					<strong>
						@config.CartOrderItemCountLabel.OrDefault("Order Item Count")
					</strong>
				</td>
				<td class="title-align">
					<strong>
						@Html.DisplayFor(model => model.ItemCount)
					</strong>
				</td>
			</tr>
		}
		@if (config.CartOrderDiscountShow)
		{
			<tr>
				<td class="text-right-md text-right-lg">
					<strong>
						@config.CartOrderDiscountLabel.OrDefault("Order Discount")
					</strong>
				</td>
				<td class="title-align">
					<strong>
						@(Model.DiscountCode.OrDefault("(none)"))
					</strong>
				</td>
			</tr>
		}
		@if (config.CartOrderSubtotalShow)
		{
			<tr>
				<td class="text-right-md text-right-lg">
					<strong>
						@config.CartOrderSubtotalLabel.OrDefault("Sub-Total")
					</strong>
				</td>
				<td class="title-align">
					<strong>
						@Html.DisplayFor(model => model.Subtotal)
					</strong>
				</td>
			</tr>
		}
		@if (config.CartOrderTaxShow)
		{
			<tr>
				<td class="text-right-md text-right-lg">
					<strong>
						@config.CartOrderTaxLabel.OrDefault("Tax")
					</strong>
				</td>
				<td class="title-align">
					<strong>
						@Html.DisplayFor(model => model.Tax)
					</strong>
				</td>
			</tr>
		}
		@if (config.CartOrderShippingShow)
		{
			<tr>
				<td class="text-right-md text-right-lg">
					<strong>
						@config.CartOrderShippingLabel.OrDefault("Shipping")
					</strong>
				</td>
				<td class="title-align">
					<strong>
						@Html.DisplayFor(model => model.Shipping)
					</strong>
				</td>
			</tr>
		}
		@if (config.CartOrderHandlingShow)
		{
			<tr>
				<td class="text-right-md text-right-lg">
					<strong>
						@config.CartOrderHandlingLabel.OrDefault("Handling")
					</strong>
				</td>
				<td class="title-align">
					<strong>
						@Html.DisplayFor(model => model.Handling)
					</strong>
				</td>
			</tr>
		}
		@if (config.CartOrderDiscountShow)
		{
			<tr>
				<td class="text-right-md text-right-lg">
					<strong>
						@config.CartOrderDiscountLabel.OrDefault("Order Discount")
					</strong>
				</td>
				<td class="title-align">
					<strong>
						@Html.DisplayFor(model => model.OrderDiscount)
					</strong>
				</td>
			</tr>
		}
		<tr>
			<td class="text-right-md text-right-lg">
				<strong>
					@config.CartOrderTotalLabel.OrDefault("Order Total")
				</strong>
			</td>
			<td class="title-align">
				<strong>
					@Html.DisplayFor(model => model.Total)
				</strong>
			</td>
		</tr>
	</table>

</div>

